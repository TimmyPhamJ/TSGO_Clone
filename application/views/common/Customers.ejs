<script>
	document.title = 'Danh mục - Khách hàng'
</script>
<div class="row">
	<div class="col-xl-12">
		<div class="ibox collapsible-box">
			<div class="ibox-head">
				<div class="ibox-title">KHÁCH HÀNG</div>
				<div class="button-bar-group">
					<button id="delete" class="btn btn-outline-danger btn-sm mr-1" data-loading-text="<i class='la la-spinner spinner'></i>Xóa dữ liệu" title="Xóa những dòng đang chọn">
						<span class="btn-icon"><i class="fa fa-trash"></i>Xóa dòng</span>
					</button>
					<button id="addrow" class="btn btn-outline-success btn-sm mr-1" title="Thêm dòng mới">
						<span class="btn-icon"><i class="fa fa-plus"></i>Thêm dòng</span>
					</button>
					<button id="save" class="btn btn-outline-primary btn-sm mr-1" data-loading-text="<i class='la la-spinner spinner'></i>Lưu dữ liệu" title="Lưu dữ liệu">
						<span class="btn-icon"><i class="fa fa-save"></i>Lưu</span>
					</button>
				</div>
			</div>

			<div class="row ibox-body">
				<div class="col-md-12 col-sm-12 col-xs-12 table-responsive">
					<div id="tablecontent">
						<table id="contenttable" class="table table-striped display nowrap" cellspacing="0" style="width: 99.8%"></table>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
	$(document).ready(function() {
		let CustomerTypeList = <%- JSON.stringify(locals.CustomerTypeList || []) %>;
		var _columns = [{
					width: "80px",
					data: "STT",
					name: "STT",
					title: "STT",
					className: "text-center  editor-cancel",
					targets: 0
				},
				{
					data: "CusTypeID",
					name: "CusTypeID",
					title: "Loại khách hàng",
					className: "text-center autocomplete",
					list: CustomerTypeList.map((itm) => {
						return {
							value: itm.CusTypeID,
							label: itm.CusTypeName
						}
					}),
					targets: 2
				},
				{
					width: "120px",
					data: "CusID",
					name: "CusID",
					title: "Mã khách hàng",
					className: "text-center",
					targets: 1
				},
				{
					data: "CusName",
					name: "CusName",
					title: "Tên khách hàng",
					className: "text-left",
					targets: 2
				},
				{
					data: "TaxCode",
					name: "TaxCode",
					title: "Mã số thuế",
					className: "text-center",
					targets: 2
				},
				{
					data: "PaymentTypeID",
					name: "PaymentTypeID",
					title: "Loại thanh toán",
					className: "text-center autocomplete",
					list: [{
						value: 'CAS',
						label: 'Thu ngay'
					}, {
						value: 'CRE',
						label: 'Thu sau'
					}],
					targets: 2
				},
				{
					data: "Tel",
					name: "Tel",
					title: "Số điện thoại",
					className: "text-center",
					targets: 2
				},
				{
					data: "Address",
					name: "Address",
					title: "Địa chỉ",
					className: "text-left",
					targets: 2
				},
				{
					data: "Email",
					name: "Email",
					title: "Email",
					className: "text-left",
					targets: 2
				},
				{
					data: "IsActive",
					name: "IsActive",
					title: "Tình trạng",
					className: "text-center data-type-checkbox",
					targets: 2
				},
				{
					data: "rowguid",
					name: "rowguid",
					visible: false,
					title: "rowguid",
					className: "text-center",
					targets: 2
				},
			],
			tbl = $('#contenttable'),
			dataList = <%- JSON.stringify(locals.dataList || []) %>;

		_columns = _columns.map((itm, ii) => {
			return {
				...itm,
				targets: ii
			}
		});

		var dataTbl = tbl.newDataTable({
			scrollY: '55vh',
			columnDefs: _columns,
			data: dataList.map((itm, ii) => {
				return {
					...itm,
					STT: ii + 1
				}
			}),
			order: [
				[0, 'asc']
			],
			paging: false,
			keys: true,
			autoFill: {
				focus: 'focus',
			},
			select: true,
			rowReorder: false
		});

		tbl.editableTableWidget();

		$('#addrow').on('click', function() {
			tbl.addRows();
		});

		$('#delete').on('click', function() {
			if (tbl.getSelectedRows().length == 0) {
				$('.toast').remove();
				toastr["info"]("Vui lòng chọn các dòng dữ liệu để xóa!");
			} else {
				tbl.confirmDelete(function(selectedData) {
					postDel(selectedData);
				});
			}
		});

		$('#save').on('click', function() {
			if (tbl.DataTable().rows('.addnew, .editing').data().toArray().length == 0) {
				$('.toast').remove();
				toastr["info"]("Không có dữ liệu thay đổi!");
			} else {
				var newData = tbl.DataTable().rows('.addnew, .editing').data().toArray();

				$.confirm({
					title: 'Thông báo!',
					type: 'orange',
					icon: 'fa fa-warning',
					content: 'Tất cả các thay đổi sẽ được lưu lại!\nTiếp tục?',
					buttons: {
						ok: {
							text: 'Xác nhận lưu',
							btnClass: 'btn-warning',
							keys: ['Enter'],
							action: function() {
								saveData();
							}
						},
						cancel: {
							text: 'Hủy bỏ',
							btnClass: 'btn-default',
							keys: ['ESC']
						}
					}
				});
			}
		});


		//save functions
		function saveData() {
			var newData = tbl.DataTable().rows('.addnew, .editing').data().toArray();

			if (newData.length > 0) {
				var fnew = {
					'data': newData
				};
				postSave(fnew);
			}
		}

		function postSave(formData) {
			var saveBtn = $('#save');
			saveBtn.button('loading');
			$('.ibox.collapsible-box').blockUI();

			$.ajax({
				url: "/Common/cmCustomers/save",
				dataType: 'json',
				data: formData,
				type: 'POST',
				success: function(datas) {
					saveBtn.button('reset');
					$('.ibox.collapsible-box').unblock();
					if (!datas.data) {
						toastr["error"]('Cập nhật dữ liệu thất bại !!');
						return;
					}
					if (datas.data) {
						toastr["success"]('Cập nhật dữ liệu thành công !!');
						tbl.DataTable().rows('.addnew').nodes().to$().removeClass("addnew");
						tbl.DataTable().rows('.editing').nodes().to$().removeClass("editing");
						tbl.updateSTT(0);
					}

				},
				error: function(err) {
					toastr["error"]("Error!");
					saveBtn.button('reset');
					$('.ibox.collapsible-box').unblock();
					console.log(err);
				}
			});
		}

		function postDel(rows) {
			$('.ibox.collapsible-box').blockUI();
			var delBtn = $('#delete');
			delBtn.button('loading');
			var delWorker = rows;
			var formdata = {
				'data': delWorker,
			};
			$.ajax({
				url: "/Common/cmCustomers/delete",
				dataType: 'json',
				data: formdata,
				type: 'POST',
				success: function(output) {
					delBtn.button('reset');
					$('.ibox.collapsible-box').unblock();
					var data = output.data;
					if (output.error && output.error.length > 0) {
						for (var i = 0; i < output.error.length; i++) {
							toastr["error"](output.error[i]);
						}
					}

					if (data) {
						tbl.DataTable().rows('.selected').remove().draw(false);
						tbl.updateSTT(0);
					}

				},
				error: function(err) {
					delBtn.button('reset');
					$('.ibox.collapsible-box').unblock();
					toastr["error"]("Error!");
					console.log(err);
				}
			});
		}
	});
</script>