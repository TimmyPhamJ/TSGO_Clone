<script>
  document.title = "Báo cáo khai thác cầu bến";
</script>
<link
  href="/assets/vendors/bootstrap-select/dist/css/bootstrap-select.min.css"
  rel="stylesheet" />
<link
  href="/assets/vendors/dataTables/extensions/select.dataTables.min.css"
  rel="stylesheet" />
<style>
  .btn-style {
    width: 2rem !important;
    height: 2rem !important;
  }
  table.dataTable tr td.select-checkbox::before {
    top: auto;
  }

  table.dataTable tr.selected td.select-checkbox::after {
    color: black !important;
    /*margin-top: -28px !important;*/
    top: 50%;
  }

  span.col-form-label {
    width: 100%;
    border-bottom: dotted 1px #ccc;
    display: inline-block;
    word-wrap: break-word;
  }
</style>
<script src="/assets/vendors/bootstrap-select/dist/js/bootstrap-select.min.js"></script>

<!-- main screem -->
<div class="row">
  <div class="col-xl-12" style="font-size: 12px">
    <div class="ibox collapsible-box">
      <i class="la la-angle-double-up dock-right"></i>
      <div class="ibox-head">
        <div class="ibox-title">BÁO CÁO KHAI THÁC CẦU BẾN</div>
        <div class="button-bar-group mr-3">
          <button
            id="importFile"
            class="btn btn-outline-warning btn-sm btn-loading mr-1"
            data-loading-text="<i class='la la-spinner spinner'></i>Nạp dữ liệu"
            title="Nạp dữ liệu">
            <span class="btn-icon"><i class="ti-search"></i>Nạp dữ liệu</span>
          </button>
          <button
            id="Export"
            class="btn btn-outline-success btn-sm mr-1"
            data-loading-text="<i class='la la-spinner spinner'></i>Export"
            title="Export">
            <span class="btn-icon"><i class="ti-export"></i>Xuất báo cáo</span>
          </button>
          <button
            id="Diary"
            class="btn btn-outline-primary btn-sm mr-1"
            data-loading-text="<i class='la la-spinner spinner'></i>Export"
            title="Diary">
            <span class="btn-icon"><i class="ti-agenda"></i>Xuất nhật ký</span>
          </button>
        </div>
      </div>

      <div class="ibox-body pt-0 pb-0 bg-f9 border-e">
        <div class="row ibox mb-0 border-e pb-1 pt-1">
          <div
            class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3"
            id="col-transfer">
            <div class="row form-group">
              <div class="col-sm-1 col-form-label">
                <label>Từ ngày</label>
              </div>
              <div class="col-sm-3 input-group-sm">
                <div class="input-group">
                  <input
                    class="form-control form-control-sm"
                    id="getIn"
                    type="text"
                    autocomplete="off"
                    placeholder=""
                    value="" />
                  <span class="ml-3 mr-3 mt-2">∼</span>
                  <input
                    class="form-control form-control-sm"
                    id="getOut"
                    type="text"
                    autocomplete="off"
                    placeholder=""
                    value="" />
                </div>
              </div>
            </div>
            <div class="row form-group">
              <div class="col-sm-1 col-form-label">
                <label>Thông tin tàu</label>
              </div>
              <div class="col-sm-3 input-group-sm">
                <div class="input-group">
                  <input
                    id="VoyageKey"
                    class="form-control form-control-sm"
                    type="text"
                    hidden="" />
                  <input
                    id="VesselName"
                    placeholder="Tên tàu/Chuyến nhập/Chuyến xuất"
                    type="text"
                    class="form-control form-control-sm input-required" />
                </div>
              </div>
              <div class="col-sm-1">
                <button
                  id="chooseVessel"
                  class="btn btn-success btn-circle btn-icon-only btn-sm btn-style"
                  title="Chọn tàu">
                  <i class="ti-plus"></i>
                </button>
                <button
                  id="nochooseVessel"
                  class="btn btn-danger btn-circle btn-icon-only btn-sm btn-style"
                  title="Bỏ chọn">
                  <i class="ti-close"></i>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="row ibox-footer border-top-0">
        <!-- Bảng hiển thị -->
        <div
          class="col-md-12 col-sm-12 col-xs-12 table-responsive"
          id="TableMain">
          <table
            id="MainScreemTable"
            class="table table-striped display nowrap"
            cellspacing="0"
            style="min-width: 98%">
            <thead></thead>
            <tbody></tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- bảng chọn tàu -->
<div
  class="modal fade"
  id="vessel-modal"
  tabindex="-1"
  role="dialog"
  aria-labelledby="groups-modalLabel-1"
  aria-hidden="true"
  data-whatever="id"
  style="padding-left: 2%; padding-top: 2%">
  <div
    class="modal-dialog"
    role="document"
    style="min-width: 1024px !important">
    <div class="modal-content" style="border-radius: 4px">
      <div class="modal-header">
        <h5 class="modal-title text-primary" id="groups-modalLabel-1">
          Danh mục tàu
        </h5>
        <button
          id="VesselSearch"
          class="btn btn-outline-warning btn-sm btn-loading mr-1"
          data-loading-text="<i class='la la-spinner spinner'></i>Nạp dữ liệu"
          title="Nạp dữ liệu">
          <span class="btn-icon"><i class="ti-search"></i>Nạp dữ liệu</span>
        </button>
      </div>
      <div class="modal-body" style="padding: 0px 15px 15px 15px">
        <div class="row mb-0 border-e border-top-0 pb-1 pt-3">
          <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="row">
              <div class="col-lg-4 col-md-4 col-sm-6 col-xs-6">
                <div class="row form-group">
                  <label class="col-md-2 col-sm-4 col-xs-4 col-form-label"
                    >Tàu</label
                  >
                  <input
                    id="VesselNameFilter"
                    class="col-md-8 col-sm-10 col-xs-10 form-control form-control-sm"
                    placeholder="Tên tàu"
                    type="text" />
                </div>
              </div>
              <div class="col-lg-4 col-md-4 col-sm-6 col-xs-6">
                <div class="row form-group">
                  <label class="col-md-2 col-sm-2 col-xs-2 col-form-label"
                    >Năm</label
                  >
                  <div
                    class="col-md-8 col-sm-10 col-xs-10 input-group input-group-sm">
                    <select
                      class="selectpicker"
                      id="YearFilter"
                      data-style="btn-default btn-sm"
                      data-width="100%"
                      title="Năm">
                      <% for (let i = 2016; i < 2026; i++){ %>
                      <option value="<%= i %>"><%= i %></option>
                      <% } %>
                    </select>
                  </div>
                </div>
              </div>
              <div class="col-lg-4 col-md-4 col-sm-6 col-xs-6">
                <div class="row form-group">
                  <label class="radio radio-success ml-5 mt-1">
                    <input
                      type="radio"
                      checked
                      name="VesselFilter"
                      class="css-checkbox"
                      value="1" />
                    <span class="input-span"></span>Đến cảng
                  </label>

                  <label class="radio radio-success ml-3 mt-1 mr-3">
                    <input
                      type="radio"
                      name="VesselFilter"
                      class="css-checkbox"
                      value="2" />
                    <span class="input-span"></span>Rời cảng
                  </label>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="row ibox-footer border-top-0 mt-3">
          <div class="col-md-12 col-sm-12 col-xs-12 table-responsive">
            <table
              id="tblVessel"
              class="table table-striped display nowrap"
              cellspacing="0"
              style="width: 99.5%">
              <thead>
                <tr style="width: 100%">
                  <th col-name="STT">STT</th>
                  <th col-name="VoyageKey"></th>
                  <th col-name="VesselID">Mã tàu</th>
                  <th col-name="VesselName">Tên tàu</th>
                  <th col-name="InboundVoyage">Chuyến nhập</th>
                  <th col-name="OutboundVoyage">Chuyến xuất</th>
                  <th col-name="ETA">ETA</th>
                  <th col-name="ETD">ETD</th>
                  <th col-name="Status">Status</th>
                  <th col-name="InLane">Lane nhập</th>
                  <th col-name="OutLane">Lane xuất</th>
                </tr>
              </thead>
              <tbody></tbody>
            </table>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <div style="margin: 0 auto !important">
          <button
            class="btn btn-sm btn-rounded btn-gradient-blue btn-labeled btn-labeled-left btn-icon"
            id="apply-vessel"
            data-dismiss="modal">
            <span class="btn-label"><i class="ti-check"></i></span>Xác nhận
          </button>
          <button
            class="btn btn-sm btn-rounded btn-gradient-peach btn-labeled btn-labeled-left btn-icon"
            data-dismiss="modal">
            <span class="btn-label"><i class="ti-close"></i></span>Đóng
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  // làm màn hình chọn tàu
  $(document).ready(function () {
    var _columns = [
      {
        data: "Select",
        title: "Chọn",
        className: "text-center select-checkbox",
        targets: 0,
      },
      {
        name: "STT",
        title: "STT",
        className: "text-center editor-cancel",
        targets: 1,
        render: function (data, type, row, meta) {
          return meta.row + 1;
        },
      },
      {
        data: "VesselName",
        name: "VesselName",
        title: "Tên tàu",
        className: "text-center",
        targets: 2,
      },
      {
        data: "NationName",
        name: "NationName",
        title: "Quốc tịch",
        className: "text-center",
        targets: 3,
      },
      {
        data: "InboundVoyage",
        name: "InboundVoyage",
        title: "Chuyến nhập",
        className: "text-center",
        targets: 4,
      },
      {
        data: "OutboundVoyage",
        name: "OutboundVoyage",
        title: "Chuyến xuất",
        className: "text-center",
        targets: 5,
      },
      {
        data: "BerthID",
        name: "BerthID",
        title: "Cập bến",
        className: "text-center",
        targets: 6,
      },
      {
        data: "BittID",
        name: "BittID",
        title: "Pit",
        className: "text-center",
        targets: 7,
      },
      {
        data: "McWeightIn",
        name: "McWeightIn",
        title: "Trọng lượng hàng hóa",
        className: "text-center",
        targets: 8,
      },
      {
        data: "ATB",
        name: "ATB",
        title: "ATB",
        className: "text-center",
        targets: 9,
      },
      {
        data: "ATD",
        name: "ATD",
        title: "ATD",
        className: "text-center",
        targets: 10,
      },
      {
        data: "TotalHours",
        name: "TotalHours",
        title: "Tổng thời gian xếp dỡ",
        className: "text-center",
        targets: 11,
      },
      {
        data: "CargoRemark",
        name: "CargoRemark",
        title: "Hàng hóa",
        className: "text-center",
        targets: 12,
      },
      {
        data: "JobModeRemark",
        name: "JobModeRemark",
        title: "Phương án xếp dỡ",
        className: "text-center",
        targets: 13,
      },
      {
        data: "DeviceRemark",
        name: "DeviceRemark",
        title: "Phương tiện xếp dỡ",
        className: "text-center",
        targets: 14,
      },
      {
        data: "LOA",
        name: "LOA",
        title: "LOA",
        className: "text-center",
        targets: 15,
        visible: false,
        render: function (data, type, row) {
          return row.LOA ? row.LOA.toFixed(3) : "";
        },
      },
      {
        data: "PosFrom",
        name: "PosFrom",
        title: "PosFrom",
        className: "text-center",
        targets: 16,
        visible: false,
        render: function (data, type, row) {
          return row.PosFrom ? row.PosFrom.toFixed(3) : 0;
        },
      },
      {
        name: "DEn",
        title: "DEn",
        className: "text-center",
        targets: 17,
        visible: false,
        render: function (data, type, row, meta) {
          let lOa = row.LOA ? row.LOA : 0;
          let from = row.PosFrom ? row.PosFrom : 0;
          let sum = lOa + from;
          return sum.toFixed(3) || 0;
        },
      },
      {
        data: "ATWD",
        name: "ATWD",
        title: "ATWD",
        className: "text-center",
        visible: false,
        targets: 18,
        render: (data, type, row) => {
          return row.ATWD || row.ATWL;
        },
      },
      {
        data: "ATCL",
        name: "ATCL",
        title: "ATCL",
        className: "text-center",
        visible: false,
        targets: 19,
        render: (data, type, row) => {
          return row.ATCL || row.ATCD;
        },
      },
      {
        data: "AlongSide",
        name: "AlongSide",
        title: "AlongSide",
        className: "text-center",
        visible: false,
        targets: 20,
      },
      {
        data: "Remark",
        name: "Remark",
        title: "Remark",
        className: "text-center",
        visible: false,
        targets: 21,
      },
    ];

    TblMain = $("#MainScreemTable");
    var dataTbl = TblMain.newDataTable({
      scrollY: "55vh",
      columnDefs: _columns,
      order: [[1, "asc"]],
      scroller: {
        displayBuffer: 20,
        boundaryScale: 0.5,
        loadingIndicator: true,
      },
      paging: false,
      keys: true,
      autoFill: {
        focus: "focus",
      },
      select: {
        style: "multi",
      },
      buttons: [],
      rowReorder: false,
    });
    let _vesselColumns = [
      "STT",
      "VoyageKey",
      "VesselID",
      "VesselName",
      "InboundVoyage",
      "OutboundVoyage",
      "ETA",
      "ETD",
      "Status",
      "InLane",
      "OutLane",
    ];
    let vesselModal = $("#vessel-modal");
    let tblVessel = $("#tblVessel");
    let _colPayer = [
      "STT",
      "CusID",
      "TaxCode",
      "CusName",
      "Address",
      "PaymentTypeID",
    ];
    /* Initial vessel table */
    tblVessel.newDataTable({
      scrollY: "30vh",
      columnDefs: [
        {
          type: "num",
          className: "text-center",
          targets: _vesselColumns.indexOf("STT"),
        },
        {
          className: "text-center",
          targets: _vesselColumns.getIndexs([
            "VesselName",
            "InboundVoyage",
            "OutboundVoyage",
            "ETA",
            "ETD",
            "InLane",
            "OutLane",
          ]),
        },
        {
          className: "hiden-input",
          targets: _vesselColumns.getIndexs([
            "VoyageKey",
            "VesselID",
            "Status",
          ]),
        },
      ],
      order: [[_vesselColumns.indexOf("STT"), "asc"]],
      paging: false,
      keys: true,
      select: {
        style: "single",
        info: false,
      },
      buttons: [],
      rowReorder: false,
      arrayColumns: _vesselColumns,
    });

    $("#vessel-modal").on("shown.bs.modal", function (e) {
      $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
    });

    $("#VesselSearch").on("click", function () {
      tblVessel.waitingLoad();
      var formData = {
        filter: {
          Status: {
            operation: "in",
            value:
              $("input[type='radio'][name='VesselFilter']:checked").val() == 1
                ? [0, 1]
                : [2, 3, 4, 5, 6],
          },
          VesselName: {
            operation: "like",
            value: $("#VesselNameFilter").val(),
          },
        },
      };

      $.ajax({
        url: "/Planning/YardPlanning/loadVesselVisit",
        dataType: "json",
        data: formData,
        type: "POST",
        success: function (data) {
          var rows = [];
          tblVessel.dataTable().fnClearTable();
          if (data.data.length > 0) {
            for (i = 0; i < data.data.length; i++) {
              var rData = data.data[i],
                r = [];
              $.each(_vesselColumns, function (idx, colname) {
                var val = "";
                switch (colname) {
                  case "STT":
                    val = i + 1;
                    break;
                  case "ETA":
                  case "ETD":
                    val = getDateTime(rData[colname]);
                    break;
                  default:
                    val = rData[colname] ? rData[colname] : "";
                    break;
                }
                r.push(val);
              });
              rows.push(r);
            }
          }
          tblVessel.dataTable().fnClearTable();
          if (rows.length > 0) {
            tblVessel.dataTable().fnAddData(rows);
          }
        },
        error: function (err) {
          tblVessel.dataTable().fnClearTable();
          console.log(err);
        },
      });
    });

    //Nút chọn tàu
    $("#chooseVessel").on("click", function () {
      $("#vessel-modal").modal("show");
      $("#VesselSearch").trigger("click");
      sumNumRows = 0;
      $("#YearFilter").val(new Date().getFullYear());
    });

    //Nút xóa dữ liệu thông tin tàu
    $("#nochooseVessel").on("click", function () {
      $("#VesselName").val("");
      $("#VoyageKey").val("");
    });

    //Điền dữ liệu vào trong các trường khi nhấn 2 lần vào bảng
    $(document).on("dblclick", "#tblVessel tbody tr", function () {
      var tblVesselSelectedRows = tblVessel
          .getSelectedRows()
          .data()
          .toArray()[0],
        VoyageKey = tblVesselSelectedRows[_vesselColumns.indexOf("VoyageKey")],
        VesselName =
          tblVesselSelectedRows[_vesselColumns.indexOf("VesselName")],
        InboundVoyage =
          tblVesselSelectedRows[_vesselColumns.indexOf("InboundVoyage")],
        OutboundVoyage =
          tblVesselSelectedRows[_vesselColumns.indexOf("OutboundVoyage")],
        InLane = tblVesselSelectedRows[_vesselColumns.indexOf("InLane")],
        OutLane = tblVesselSelectedRows[_vesselColumns.indexOf("OutLane")],
        ETA = tblVesselSelectedRows[_vesselColumns.indexOf("ETA")],
        ETD = tblVesselSelectedRows[_vesselColumns.indexOf("ETD")];
      $("#VoyageKey").val(VoyageKey);
      $("#VesselName").val(
        VesselName + "/" + InboundVoyage + "/" + OutboundVoyage
      );
      $("#ETA").val(ETA);
      $("#ETD").val(ETD);
      $("#search").trigger("click");
      vesselModal.modal("hide");
    });

    $(document).on("click", "#tblVessel tbody tr", function () {
      $("#tblVessel tbody tr.selected").removeClass("selected");
      $(this).addClass("selected");
    });

    //Nhấn xác nhận trong bảng chọn tàu sẽ điền dữ liệu vào các trường
    $("#apply-vessel").on("click", function () {
      var tblVesselSelectedRows = tblVessel
        .getSelectedRows()
        .data()
        .toArray()[0];
      let VoyageKey =
        tblVesselSelectedRows[_vesselColumns.indexOf("VoyageKey")];
      let VesselName =
        tblVesselSelectedRows[_vesselColumns.indexOf("VesselName")];
      let InboundVoyage =
        tblVesselSelectedRows[_vesselColumns.indexOf("InboundVoyage")];
      let OutboundVoyage =
        tblVesselSelectedRows[_vesselColumns.indexOf("OutboundVoyage")];
      let InLane = tblVesselSelectedRows[_vesselColumns.indexOf("InLane")];
      let OutLane = tblVesselSelectedRows[_vesselColumns.indexOf("OutLane")];
      let ETA = tblVesselSelectedRows[_vesselColumns.indexOf("ETA")];
      let ETD = tblVesselSelectedRows[_vesselColumns.indexOf("ETD")];
      $("#VoyageKey").val(VoyageKey);
      $("#VesselName").val(
        VesselName + "/" + InboundVoyage + "/" + OutboundVoyage
      );
    });

    //Thoilc(*Note)-Nạp dữ liệu
    $("#importFile").on("click", function () {
      let getIn = "",
        getOut = "",
        voyageKey = "";
      voyageKey = $("#VoyageKey").val();
      getIn = $("#getIn").val();
      getOut = $("#getOut").val();
      let dataSend = {
        VoyageKey: voyageKey,
        GetIn: getIn,
        GetOut: getOut,
      };
      $.ajax({
        url: "/Report/reportBerth/getData",
        dataType: "json",
        data: dataSend,
        type: "GET",
        success: function (response) {
          $("#MainScreemTable").dataTable().fnClearTable();
          let data = response.data;
          // console.log("data", response);
          if (data.iStatus) {
            toastr["success"](data.iMessage);
            if (data.iPayload.length) {
              $("#MainScreemTable").dataTable().fnAddData(data.iPayload);
            } else {
              $("#MainScreemTable").dataTable().fnClearTable();
            }
          } else {
            toastr["error"](data.iMessage);
            return false;
          }
        },
        error: function (err) {
          toastr["error"]("Phát sinh lỗi! Xem Log");
          return false;
        },
      });
      return true;
    });

    //Thoilc(*Note)-Export Excel 4Node
    //https://stackoverflow.com/questions/8135132/how-to-encode-url-parameters
    $("#Export").on("click", function () {
      const encodeGetParams = (p) =>
        Object.entries(p)
          .map((kv) => kv.map(encodeURIComponent).join("="))
          .join("&");
      const params = {};
      params["GetIn"] = $("#getIn").val();
      params["GetOut"] = $("#getOut").val();
      params["VoyageKey"] = $("#VoyageKey").val();
      // console.log("/Report/reportBerth/exportExcel?" + encodeGetParams(params));
      window.open("/Report/reportBerth/exportExcel?" + encodeGetParams(params));
    });

    //Thoilc(*Note)-View thời gian select
    $("#getIn").val(moment().startOf("day").format("YYYY-MM-DD HH:mm:ss"));
    $("#getOut").val(moment().endOf("day").format("YYYY-MM-DD HH:mm:ss"));
    $("#getIn, #getOut").datetimepicker({
      controlType: "select",
      oneLine: true,
      dateFormat: "yy-mm-dd",
      timeFormat: "HH:mm:ss",
      onSelect: function (dateText) {
        $(this).val(moment(dateText).format("YYYY-MM-DD HH:mm:ss"));
      },
    });
  });

  //Minh xuất Nhât ký tàu
  $("#Diary").on("click", function () {
    var dtTable = TblMain.DataTable();
    var selectedRowsData = dtTable.rows({ selected: true }).data().toArray();
    // console.log("dòng", selectedRowsData);
    if (selectedRowsData.length > 0) {
      toastr["success"]("Nhật ký đang được tải xuống.");
      var rowCount = selectedRowsData.length;
      var query = { rowCount: rowCount };
      for (var i = 0; i < rowCount; i++) {
        var item = selectedRowsData[i];
        var vesselName = item.VesselName;
        var nationName = item.NationName;
        var inboundVoyage = item.InboundVoyage;
        var outboundVoyage = item.OutboundVoyage;
        var berthID = item.BerthID;
        var bittID = item.BittID;
        var mcWeightIn = item.McWeightIn;
        var aTB = item.ATB;
        var aTD = item.ATD;
        var cargoRemark = item.CargoRemark;
        var jobModeRemark = item.JobModeRemark;
        var deviceRemark = item.DeviceRemark;
        var loa = item.LOA;
        var posFrom = item.PosFrom;
        var aTWD = item.ATWD;
        var aTWL = item.ATWL;
        var aTCL = item.ATCL;
        var aTCD = item.ATCD;
        var alongSide = item.AlongSide;
        var remark = item.Remark;

        query["vesselName" + i] = vesselName;
        query["nationName" + i] = nationName;
        query["inboundVoyage" + i] = inboundVoyage;
        query["outboundVoyage" + i] = outboundVoyage;
        query["berthID" + i] = berthID;
        query["bittID" + i] = bittID;
        query["mcWeightIn" + i] = mcWeightIn;
        query["aTB" + i] = aTB;
        query["aTD" + i] = aTD;
        query["cargoRemark" + i] = cargoRemark;
        query["jobModeRemark" + i] = jobModeRemark;
        query["deviceRemark" + i] = deviceRemark;
        query["loa" + i] = loa;
        query["posFrom" + i] = posFrom;
        query["aTWD" + i] = aTWD;
        query["aTWL" + i] = aTWL;
        query["aTCL" + i] = aTCL;
        query["aTCD" + i] = aTCD;
        query["alongSide" + i] = alongSide;
        query["remark" + i] = remark;
      }
      // console.log("query", query);
      var queryString = $.param(query);
      var downloadUrl = "/Report/reportBerth/diary?" + queryString;

      var currentDate = new Date();
      var day = String(currentDate.getDate()).padStart(2, "0");
      var month = String(currentDate.getMonth() + 1).padStart(2, "0");
      var year = String(currentDate.getFullYear());
      var hours = String(currentDate.getHours()).padStart(2, "0");
      var minutes = String(currentDate.getMinutes()).padStart(2, "0");
      var seconds = String(currentDate.getSeconds()).padStart(2, "0");

      var fileName =
        "NHATKYKHAITHACCAUBEN_" +
        day +
        month +
        year +
        "_" +
        hours +
        minutes +
        seconds +
        ".xlsx";

      var downloadLink = document.createElement("a");
      downloadLink.href = downloadUrl;
      downloadLink.download = fileName;
      downloadLink.target = "_blank";

      downloadLink.addEventListener("click", function () {
        // console.log("File đang được tải xuống...");
        toastr.info("File đang được tải xuống...");
      });

      downloadLink.addEventListener("load", function () {
        // console.log("File đã tải về thành công!");
        toastr.success("File đã tải về thành công!");
      });

      document.body.appendChild(downloadLink);
      downloadLink.click();
      document.body.removeChild(downloadLink);
    } else {
      toastr["error"]("Vui lòng chọn dữ liệu để xuất nhật ký");
      return;
    }
  });
</script>
