<script>
	document.title = "Hợp đồng";
</script>
<script src="/assets/js/bootstrap-select.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.1/js/bootstrap-select.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.1/css/bootstrap-select.css" />
<style>
	.input_dttt {
		padding-left: 30px;
		padding-right: 30px;
	}
</style>

<div class="row">
	<div class="col-xl-12" style="font-size: 12px">
		<div class="ibox collapsible-box">
			<i class="la la-angle-double-up dock-right"></i>
			<div class="ibox-head">
				<div class="ibox-title">HỢP ĐỒNG</div>
				<div class="button-bar-group mr-3">
					<button id="addrow" class="btn btn-outline-success btn-sm mr-1" title="Thêm dòng mới">
						<span class="btn-icon"><i class="fa fa-plus"></i>Thêm dòng</span>
					</button>
					<button id="save" class="btn btn-outline-primary btn-sm mr-1" data-loading-text="<i class='la la-spinner spinner'></i>Lưu dữ liệu" title="Lưu dữ liệu">
						<span class="btn-icon"><i class="fa fa-save"></i>Lưu</span>
					</button>
					<button id="delete" class="btn btn-outline-danger btn-sm mr-1" data-loading-text="<i class='la la-spinner spinner'></i>Xóa dữ liệu" title="Xóa những dòng đang chọn">
						<span class="btn-icon"><i class="fa fa-trash"></i>Xóa dòng</span>
					</button>
				</div>
			</div>

			<!-- Phần dưới -->
			<div class="ibox-body pt-3 pb-3 bg-f9 border-e">
				<div class="row border-e bg-white pb-1">
					<div class="col-sm-12 col-xs-12 mt-3 col-xl-7">
						<div class="row form-group">
							<label class="col-xl-3 col-lg-1 col-2 col-form-label">Mẫu hợp đồng</label>
							<select style="border-color: rgba(0, 0, 0, 0.1);border-width: 1px;height: 2.2rem;" id="temp" class="selectpicker col-xl-9" data-style="btn-default btn-sm" required="" data-live-search="true">
								<option style="color: #ccc;" value="">Chọn mẫu hợp đồng</option>
								<% for(var i=0; i < locals.formatDatacontractForm.length; i++) { %>
								<option>
									<%- locals.formatDatacontractForm[i].ContractName+'*:*'+locals.formatDatacontractForm[i].CusID+'*:*'+locals.formatDatacontractForm[i].ApplyDate+'*:*'+locals.formatDatacontractForm[i].ExpireDate%>
								</option>
								<% } %>
							</select>
						</div>
					</div>
				</div>
				<div class="row border-e bg-white readonly-temp pt-3" id="temp_info" style="border-top: none!important;">
					<div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-xs-12">
						<div class="row form-group">
							<label class="col-lg-4 col-md-4 col-sm-2 col-xs-4 col-form-label">Tên hợp đồng</label>
							<div class="col-lg-8 col-md-8 col-sm-10 col-xs-8">
								<input id="nick_name" class="form-control form-control-sm" placeholder="Tên hợp đồng" type="text">
							</div>
						</div>
						<!-- <div class="row form-group">
							<label class="col-lg-4 col-md-4 col-sm-2 col-xs-4 col-form-label">Hiệu lực</label>
							<div class="col-lg-8 col-md-8 col-sm-10 col-xs-8">
								<div class="input-group">
									<input class="form-control form-control-sm input-required" id="getIn" type="text" placeholder="Từ ngày" readonly>
									<span class="input-group-addon bg-white btn text-muted" title="Không giới hạn" style="padding: 0 .4rem">
										[&ensp; <sub style="font-size:18px">*</sub> &ensp;]
									</span>
									<input class="form-control form-control-sm input-required ml-1" id="getOut" type="text" placeholder="Đến ngày" readonly>
								</div>
							</div>
						</div> -->
						<div class="row form-group">
							<div class="col-xl-4 col-form-label ">
								<label class="">Hiệu lực</label>
							</div>
							<div class="col-xl-8 input-group-sm">
								<div class="input-group">
									<input class="form-control form-control-sm" id="getIn" type="text" autocomplete="off" placeholder="" value="" />
									<span class="ml-3 mr-3">∼</span>
									<input class="form-control form-control-sm" id="getOut" type="text" autocomplete="off" placeholder="" value="" />
								</div>
							</div>
						</div>
						<div class="row form-group">
							<label class="col-lg-4 col-md-4 col-sm-2 col-xs-4 col-form-label">Hành trình tàu</label>
							<div class="form-group input-group col-lg-8">
								<input id="VoyageKey" class="form-control form-control-sm" type="text" hidden="" />
								<input id="VesselName" class="form-control form-control-sm input-required" id="shipid" placeholder="Tàu/chuyến" type="text" readonly>
								<span id="chooseVessel" class="input-group-addon bg-white btn mobile-hiden text-warning" style="padding: 0 .5rem" title="chọn tàu" data-toggle="modal" data-target="#ship-modal">
									<i class="ti-search"></i>
								</span>
								<span id="nochooseVessel" class="input-group-addon bg-white btn mobile-hiden text-warning" style="padding: 0 .5rem" title="chọn tàu" data-toggle="modal" data-target="#ship-modal">
									<i class="ti-close"></i>
								</span>
							</div>
						</div>
					</div>
					<div class="col-xl-6 col-lg-3 col-md-7 col-sm-6 col-xs-8">
						<div class="row form-group">
							<label class="col-lg-4 col-md-4 col-sm-2 col-xs-4 col-form-label">Mẫu biểu cước</label>
							<div class="col-lg-8">
								<select style="border-color: rgba(0, 0, 0, 0.1);border-width: 1px;height: 2.2rem;" id="trfStandardFilter" name="trfStandardFilter" class="selectpicker col-12" data-style="btn-default btn-sm" title="Chọn mẫu biểu cước" required="" data-live-search="true">
									<option value="">Chọn mẫu biểu cước</option>
									<% for(var i=0; i < locals.loadTrfStandardGroup.length; i++) { %>
									<option>
										<%- locals.loadTrfStandardGroup[i].ApplyDate+'-'+locals.loadTrfStandardGroup[i].ExpireDate+'-'+locals.loadTrfStandardGroup[i].Remark %>
									</option>
									<% } %>
								</select>
							</div>
						</div>
						<div class="row form-group">
							<label class="col-lg-4 col-md-4 col-sm-2 col-xs-4 col-form-label">Hình thức thanh toán</label>
							<div class="col-lg-8 col-md-8 col-sm-10 col-xs-8">
								<select style="border-color: rgba(0, 0, 0, 0.1);border-width: 1px;height: 2.2rem" id="payment-type" class="selectpicker input-required col-lg-12" data-style="btn-default btn-sm" data-width="100%" data-show-subtext="true" data-live-search="true" required="">
									<option value="*" selected>*</option>
									<option value="CAS">Thu ngay</option>
									<option value="CRE">Thu sau</option>
								</select>
							</div>
						</div>
						<div class="row form-group">
							<label class="col-lg-4 col-md-4 col-sm-2 col-xs-4 col-form-label">ĐT thanh toán *</label>
							<div class="form-group input-group col-lg-8 input_dttt">
								<input class="form-control form-control-sm input-required" id="c-CusID" placeholder="ĐTTT" type="text" readonly>
								<!-- <input id="c-CusID" placeholder="ĐTTT" style="border-radius: 5px; padding-left: 7.5px; border-color: rgba(0, 0, 0, .1); border-width: 1px; height: 2rem; margin-left: 1rem;" type="text" class="col-xl-8"> -->
								<span class="input-group-addon bg-white btn mobile-hiden text-warning" title="Chọn đối tượng thanh toán" data-toggle="modal" data-target="#payer-modal" onclick="setTimeout(()=>{$('#search-payer').DataTable().draw()},200)" style="border-radius: 5px; padding-left: 7.5px; border-color: rgba(0, 0, 0, .1); border-width: 1px; padding: 0 0.5rem;">
									<i class="ti-search"></i>
								</span>
								<span id="nochooCus" class="input-group-addon bg-white btn mobile-hiden text-warning" style="padding: 0 .5rem" title="chọn tàu" data-toggle="modal" data-target="#ship-modal">
									<i class="ti-close"></i>
								</span>
							</div>
						</div>

					</div>

				</div>

				<!-- Table1 -->


				<div style="padding: 16px 0px; margin-top: 3px" class=" bg-white ">
					<span style="margin-bottom: 20px;margin-left: 20px;font-weight: 500;">PHƯƠNG ÁN CƯỚC</span>
					<div style="margin-top: 15px;" class="col-md-12 col-sm-12 col-xs-12 table-responsive">
						<div id="tablecontent">
							<table id="MainScreemTable" class="table table-striped display nowrap" cellspacing="0" style="width: 99.8%"></table>
						</div>
					</div>
				</div>
				<!-- Table2 -->
				<div style="padding: 16px 0px; margin-top: 3px" class=" bg-white ">
					<span style="margin-left: 20px;font-weight: 500;">CHI TIẾT HỢP ĐỒNG</span>
					<div style="margin-top: 15px;" class="col-md-12 col-sm-12 col-xs-12 table-responsive">
						<div id="tablecontent">
							<table id="MainScreemTable1" class="table table-striped display nowrap" cellspacing="0" style="width: 99.8%"></table>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- Modal chọn tàu -->
<div class="modal fade" id="vessel-modal" tabindex="-1" role="dialog" aria-labelledby="groups-modalLabel-1" aria-hidden="true" data-whatever="id" style="padding-left: 2%; padding-top: 2%">
	<div class="modal-dialog" role="document" style="min-width: 1024px !important">
		<div class="modal-content" style="border-radius: 4px">
			<div class="modal-header">
				<h5 class="modal-title text-primary" id="groups-modalLabel-1">
					Danh mục tàu
				</h5>
				<button id="VesselSearch" class="btn btn-outline-warning btn-sm btn-loading mr-1" data-loading-text="<i class='la la-spinner spinner'></i>Nạp dữ liệu" title="Nạp dữ liệu">
					<span class="btn-icon"><i class="ti-search"></i>Nạp dữ liệu</span>
				</button>
			</div>
			<div class="modal-body" style="padding: 0px 15px 15px 15px">
				<div class="row mb-0 border-e border-top-0 pb-1 pt-3">
					<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
						<div class="row">
							<div class="col-lg-4 col-md-4 col-sm-6 col-xs-6">
								<div class="row form-group">
									<label class="col-md-2 col-sm-4 col-xs-4 col-form-label">Tàu</label>
									<input id="VesselNameFilter" class="col-md-8 col-sm-10 col-xs-10 form-control form-control-sm" placeholder="Tên tàu" type="text" />
								</div>
							</div>
							<div class="col-lg-4 col-md-4 col-sm-6 col-xs-6">
								<div class="row form-group">
									<label class="col-md-2 col-sm-2 col-xs-2 col-form-label">Năm</label>
									<div class="col-md-8 col-sm-10 col-xs-10 input-group input-group-sm">
										<select id="YearFilter" data-width="100%" data-style="btn-default btn-sm" title="Năm" style="
                        width: 80%;
                        border-radius: 2px;
                        border-color: rgba(0, 0, 0, 0.1);
                      ">
											<% for (let i = 2016; i < 2026; i++){ %>
											<option value="<%= i %>"><%= i %></option>
											<% } %>
										</select>
									</div>
								</div>
							</div>
							<div class="col-lg-4 col-md-4 col-sm-6 col-xs-6">
								<div class="row form-group">
									<label class="radio radio-success ml-5 mt-1">
										<input type="radio" checked name="VesselFilter" class="css-checkbox" value="1" />
										<span class="input-span"></span>Đến cảng
									</label>

									<label class="radio radio-success ml-3 mt-1 mr-3">
										<input type="radio" name="VesselFilter" class="css-checkbox" value="2" />
										<span class="input-span"></span>Rời cảng
									</label>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="row ibox-footer border-top-0 mt-3">
					<div class="col-md-12 col-sm-12 col-xs-12 table-responsive">
						<table id="VesselTable" class="table table-striped display nowrap" cellspacing="0" style="width: 99.5%">
							<thead>
								<tr style="width: 100%">
									<th col-name="STT">STT</th>
									<th col-name="VoyageKey"></th>
									<th col-name="VesselID">Mã tàu</th>
									<th col-name="VesselName">Tên tàu</th>
									<th col-name="InboundVoyage">Chuyến nhập</th>
									<th col-name="OutboundVoyage">Chuyến xuất</th>
									<th col-name="ETA">ETA</th>
									<th col-name="ETD">ETD</th>
									<th col-name="Status">Status</th>
									<th col-name="InLane">Lane nhập</th>
									<th col-name="OutLane">Lane xuất</th>
								</tr>
							</thead>
							<tbody></tbody>
						</table>
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<div style="margin: 0 auto !important">
					<button class="btn btn-sm btn-rounded btn-gradient-blue btn-labeled btn-labeled-left btn-icon" id="apply-vessel" data-dismiss="modal">
						<span class="btn-label"><i class="ti-check"></i></span>Xác nhận
					</button>
					<button class="btn btn-sm btn-rounded btn-gradient-peach btn-labeled btn-labeled-left btn-icon" data-dismiss="modal">
						<span class="btn-label"><i class="ti-close"></i></span>Đóng
					</button>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- Modal ĐTTT -->
<div class="modal fade" id="payer-modal" tabindex="3" role="dialog" aria-labelledby="groups-modalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-mw" role="document" style="min-width: 960px;">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="groups-modalLabel">
					Chọn đối tượng chủ hàng
				</h5>
			</div>
			<div class="modal-body" style="padding: 10px 3px;">
				<div class="table-responsive">
					<table id="search-payer" class="table table-striped display nowrap table-popup single-row-select" cellspacing="0" style="width: 99.9%;">
						<thead>
							<tr>
								<th>STT</th>
								<th>Mã ĐT</th>
								<th>MST</th>
								<th>Tên</th>
								<th>Địa chỉ</th>
								<th>HTTT</th>
							</tr>
						</thead>
						<tbody></tbody>
					</table>
				</div>
			</div>
			<div class="modal-footer" style="position: relative; padding: 22px 15px !important;">
				<button type="button" id="select-payer" class="btn btn-sm btn-outline-primary" data-dismiss="modal">
					<i class="fa fa-check"></i>
					Chọn
				</button>
				<button type="button" class="btn btn-sm btn-outline-secondary" data-dismiss="modal">
					<i class="fa fa-close"></i>
					Đóng
				</button>
			</div>
		</div>
	</div>
</div>

<script>
	$(document).ready(function() {
		$("#getIn").val(moment().startOf("day").format("YYYY-MM-DD HH:mm:ss"));
		$("#getOut").val(moment().endOf("day").format("YYYY-MM-DD HH:mm:ss"));
		$("#getIn, #getOut").datetimepicker({
			controlType: "select",
			oneLine: true,
			dateFormat: "yy-mm-dd",
			timeFormat: "HH:mm:ss",
			onSelect: function(dateText) {
				$(this).val(moment(dateText).format("YYYY-MM-DD HH:mm:ss"));
			},
		});
		itemList = <%- JSON.stringify(locals.itemList||[])%>;
		loadTrfCode = <%- JSON.stringify(locals.loadTrfCode||[])%>;
		classList = <%- JSON.stringify(locals.classList||[])%>;
		jobModeList = <%- JSON.stringify(locals.loadJobMode||[])%>;
		methodList = <%- JSON.stringify(locals.loadMethod||[])%>;
		jobTypeList = <%- JSON.stringify(locals.jobTypeList||[])%>;
		serviceList = <%- JSON.stringify(locals.serviceList||[])%>;
		transitList = <%- JSON.stringify(locals.transitList||[])%>;
		cargoTypeList = <%- JSON.stringify(locals.cargoTypeList||[])%>;
		unitList = <%- JSON.stringify(locals.unitList||[])%>;
		invRateList = <%- JSON.stringify(locals.loadRate||[])%>;
		dataContractForm = <%- JSON.stringify(locals.dataContractForm||[])%>;
		var _columns = [{
				width: "80px",
				data: "STT",
				name: "STT",
				title: "STT",
				className: "text-center editor-cancel",
				targets: 0,
				render: function(data, type, row, meta) {
					return meta.row + 1;
				},
			},
			{
				data: "",
				name: "Chọn",
				title: "Chọn",
				className: "text-center editor-cancel",
				targets: 1,
				render: function(data, type, row, meta) {
					return `<input style="width:20px;height:20px" class="checkcheck" type="checkbox"/>`
				}


			},
			{
				data: "TRFCode",
				name: "TRFCode",
				title: "Mã biểu cước",
				className: "text-center editor-cancel",
				targets: 2
			},
			{
				data: "TRFDesc",
				name: "TRFDesc",
				title: "Diễn giải",
				className: "text-center editor-cancel",
				targets: 3
			},
			{
				data: "ClassID",
				name: "ClassID",
				title: "Hướng",
				className: "text-center editor-cancel",
				targets: 4
			},
			{
				data: "",
				name: "IsLocalForeign",
				title: "Nội/Ngoại",
				className: "text-center editor-cancel",
				targets: 5,
				render: function(data, type, row, meta) {
					return row.IsLocalForeign == "L" ? "Nội" : row.IsLocalForeign == "F" ? "Ngoại" : "*"
				}

			},
			{
				data: "JobModeName",
				name: "JobModeID",
				title: "Phương án",
				className: "text-center editor-cancel",
				targets: 6
			},

			{
				data: "MethodName",
				name: "MethodID",
				title: "Phương thức",
				className: "text-center editor-cancel",
				targets: 7
			},
			{
				data: "JobTypeID",
				name: "JobTypeID",
				title: "Loại công việc",
				className: "text-center editor-cancel",
				targets: 8
			},
			{
				data: "ServiceID",
				name: "ServiceID",
				title: "Dịch vụ",
				className: "text-center editor-cancel",
				targets: 9
			},
			{
				data: "TransitID",
				name: "TransitID",
				title: "Loại hình vận chuyển",
				className: "text-center  editor-cancel",
				targets: 10
			},

			{
				data: "CargoTypeName",
				name: "CargoTypeID",
				title: "Nhóm hàng hóa",
				className: "text-center editor-cancel",
				targets: 11
			},
			{
				data: "ItemName",
				name: "ItemID",
				title: "Hàng hóa",
				className: "text-center editor-cancel",
				targets: 12
			},
			{
				data: "FormGRT",
				name: "FormGRT",
				title: "Từ GRT",
				className: "text-center data-type-numeric editor-cancel",
				targets: 13
			},
			{
				data: "ToGRT",
				name: "ToGRT",
				title: "Đến GRT",
				className: "text-center data-type-numeric editor-cancel",
				targets: 14
			},

			{
				data: "UnitName",
				name: "UnitID",
				title: "ĐVT",
				className: "text-center editor-cancel",
				targets: 15
			},
			{
				data: "CurrencyCode",
				name: "CurrencyCode",
				title: "Loại tiền",
				className: "text-center editor-cancel",
				targets: 16
			},

			{
				data: "Price",
				name: "Price",
				title: "Giá",
				className: "text-center data-type-numeric editor-cancel",
				targets: 17,
				render: $.fn.dataTable.render.number(',', 0),
			},
			{
				data: "VAT",
				name: "VAT",
				title: "VAT",
				className: "text-center data-type-numeric editor-cancel",
				targets: 18
			},
			{
				data: "IncludeVAT",
				name: "IncludeVAT",
				title: "Đã bao gồm thuế",
				className: "text-center data-type-checkbox editor-cancel",
				targets: 19
			},

		];
		var _columns1 = [{
				width: "80px",
				data: "STT",
				name: "STT",
				title: "STT",
				className: "text-center  editor-cancel",
				targets: 0,
				render: function(data, type, row, meta) {
					return meta.row + 1;
				},
			},
			{

				data: "TRFCode",
				name: "TRFCode",
				title: "Mã biểu cước",
				className: "text-center autocomplete",
				list: loadTrfCode.map((itm) => {
					return {
						value: itm.TRFCode,
						label: itm.TRFCode
					}
				}),
				targets: 1

			},
			{
				data: "TRFDesc",
				name: "Diễn giải",
				title: "Diễn giải",
				className: "text-center ",
				targets: 2
			},
			{
				data: "ClassID",
				name: "ClassID",
				title: "Hướng",
				className: "text-center autocomplete",
				list: [{
					ClassID: '*',
					ClassName: '*'
				}].concat(classList).map((itm) => {
					return {
						value: itm.ClassID,
						label: itm.ClassName
					}
				}),
				targets: 3
			},
			{
				data: "IsLocalForeign",
				name: "IsLocalForeign",
				title: "Nội/Ngoại",
				className: "text-center autocomplete",
				list: [{
					value: '*',
					label: '*'
				}, {
					value: 'L',
					label: 'Nội'
				}, {
					value: 'F',
					label: 'Ngoại'
				}],
				targets: 4
			},
			{
				data: "JobModeID",
				name: "JobModeID",
				title: "Phương án",
				className: "text-center autocomplete",
				list: [{
					JobModeID: '*',
					JobModeName: '*'
				}].concat(jobModeList).map((itm) => {
					return {
						value: itm.JobModeID,
						label: itm.JobModeName
					}
				}),
				targets: 5
			},
			{
				data: "MethodID",
				name: "MethodID",
				title: "Phương thức",
				className: "text-center autocomplete",
				list: [{
					MethodID: '*',
					MethodName: '*'
				}].concat(methodList).map((itm) => {
					return {
						value: itm.MethodID,
						label: itm.MethodName
					}
				}),
				targets: 6
			},
			{
				data: "JobTypeID",
				name: "JobTypeID",
				title: "Loại công việc",
				className: "text-center autocomplete",
				list: [{
					JobTypeID: '*',
					JobTypeName: '*'
				}].concat(jobTypeList).map((itm) => {
					return {
						value: itm.JobTypeID,
						label: itm.JobTypeName
					}
				}),
				targets: 7
			},
			{
				data: "ServiceID",
				name: "ServiceID",
				title: "Dịch vụ",
				className: "text-center autocomplete",
				list: [{
					ServiceID: '*',
					ServiceName: '*'
				}].concat(serviceList).map((itm) => {
					return {
						value: itm.ServiceID,
						label: itm.ServiceName
					}
				}),
				targets: 8
			},
			{
				data: "TransitID",
				name: "TransitID",
				title: "Loại hình vận chuyển",
				className: "text-center autocomplete",
				list: [{
					TransitID: '*',
					TransitName: '*'
				}].concat(transitList).map((itm) => {
					return {
						value: itm.TransitID,
						label: itm.TransitName
					}
				}),
				targets: 9
			},
			{
				data: "CargoTypeID",
				name: "CargoTypeID",
				title: "Nhóm hàng hóa",
				className: "text-center autocomplete",
				list: [{
					CargoTypeID: '*',
					CargoTypeName: '*'
				}].concat(cargoTypeList).map((itm) => {
					return {
						value: itm.CargoTypeID,
						label: itm.CargoTypeName
					}
				}),
				targets: 10
			},
			{
				data: "ItemID",
				name: "ItemID",
				title: "Hàng hóa",
				className: "text-center autocomplete",
				list: [{
					ItemID: '*',
					ItemName: '*'
				}].concat(itemList).map((itm) => {
					return {
						value: itm.ItemID,
						label: itm.ItemName
					}
				}),
				targets: 11
			},
			{
				data: "FormGRT",
				name: "FormGRT",
				title: "Từ GRT",
				className: "text-center data-type-numeric",
				targets: 12
			},
			{
				data: "ToGRT",
				name: "ToGRT",
				title: "Đến GRT",
				className: "text-center data-type-numeric",
				targets: 13
			},
			{
				data: "UnitID",
				name: "UnitID",
				title: "ĐVT",
				className: "text-center autocomplete",
				list: [{
					UnitID: '*',
					UnitName: '*'
				}].concat(unitList).map((itm) => {
					return {
						value: itm.UnitID,
						label: itm.UnitName
					}
				}),
				targets: 14
			},
			{
				data: "CurrencyCode",
				name: "CurrencyCode",
				title: "Loại tiền",
				className: "text-center autocomplete",
				list: invRateList.map((itm) => {
					return {
						value: itm.RateID,
						label: itm.RateID
					}
				}),
				targets: 15
			},
			{
				data: "Price",
				name: "Price",
				title: "Giá",
				className: "text-center data-type-numeric",
				targets: 16,
				render: $.fn.dataTable.render.number(',', 0),
			},
			{
				data: "VAT",
				name: "VAT",
				title: "VAT",
				targets: 17,
				className: "text-center"

			},
			{
				data: "IncludeVAT",
				name: "IncludeVAT",
				title: "Đã bao gồm thuế",
				className: "text-center data-type-checkbox",
				targets: 18
			},
		];
		let TblMain = $("#MainScreemTable");
		var dataTbl = TblMain.newDataTable({
			scrollY: "30vh",
			columnDefs: _columns,
			order: [
				[0, "asc"]
			],
			paging: false,
			keys: true,
			autoFill: {
				focus: "focus",
			},
			select: {
				style: "multi",
				info: false,
			},
			buttons: [],
			rowReorder: false,
		});
		let TblMain1 = $("#MainScreemTable1");
		var dataTbl1 = TblMain1.newDataTable({
			scrollY: "30vh",
			columnDefs: _columns1,
			order: [
				[0, "asc"]
			],
			paging: false,
			keys: true,
			autoFill: {
				focus: "focus",
			},
			select: {
				style: "multi",
				info: false,
			},
			buttons: [],
			rowReorder: false,
			numberFormat: ',0',
		});
		//TblMain.editableTableWidget();
		TblMain1.editableTableWidget();
		$('#addrow').on('click', function() {
			TblMain1.addRows();
		});
		// Hiển thị modal chọn tàu
		$("#chooseVessel").on("click", function() {
			$("#vessel-modal").modal("show");
			$("#VesselSearch").trigger("click");
			sumNumRows = 0;
			$("#YearFilter").val(new Date().getFullYear());
		});
		//   Nút xóa dữ liệu thông tin tàu
		$("#nochooseVessel").on("click", function() {
			$("#VesselName").val("");
			$("#VoyageKey").val("");
		});
		// làm màng hình chọn tàu
		$(document).ready(function() {
			var _vesselColumns = [
					"STT",
					"VoyageKey",
					"VesselID",
					"VesselName",
					"InboundVoyage",
					"OutboundVoyage",
					"ETA",
					"ETD",
					"Status",
					"InLane",
					"OutLane",
				],
				tblVessel = $("#VesselTable"),
				vesselModal = $("#vessel-modal");
			/* Initial vessel table */
			tblVessel.newDataTable({
				scrollY: "30vh",
				columnDefs: [{
						type: "num",
						className: "text-center",
						targets: _vesselColumns.indexOf("STT"),
					},
					{
						className: "text-center",
						targets: _vesselColumns.getIndexs(["VesselName", "InboundVoyage", "OutboundVoyage", "ETA", "ETD", "InLane", "OutLane"]),
					},
					{
						className: "hiden-input",
						targets: _vesselColumns.getIndexs(["VoyageKey", "VesselID", "Status"]),
					},
				],
				order: [
					[_vesselColumns.indexOf("STT"), "asc"]
				],
				paging: false,
				keys: true,
				autoFill: {
					focus: "focus",
				},
				select: {
					style: "single",
					info: false,
				},
				buttons: [],
				rowReorder: false,
				arrayColumns: _vesselColumns,
			});

			$("#vessel-modal").on("shown.bs.modal", function(e) {
				$($.fn.dataTable.tables(true)).DataTable().columns.adjust();
			});
			$("#VesselSearch").on("click", function() {
				tblVessel.waitingLoad();
				var formData = {
					filter: {
						Status: {
							operation: 'in',
							value: $("input[type='radio'][name='VesselFilter']:checked").val() == 1 ? [0, 1] : [2, 3, 4, 5, 6]
						},
						VesselName: {
							operation: 'like',
							value: $('#VesselNameFilter').val()
						}
					}

				};
				$.ajax({
					url: "/Planning/YardPlanning/loadVesselVisit",
					dataType: "json",
					data: formData,
					type: "POST",
					success: function(data) {
						var rows = [];
						tblVessel.dataTable().fnClearTable();
						if (data.data.length > 0) {
							for (i = 0; i < data.data.length; i++) {
								var rData = data.data[i],
									r = [];
								$.each(_vesselColumns, function(idx, colname) {
									var val = "";
									switch (colname) {
										case "STT":
											val = i + 1;
											break;
										case "ETA":
										case "ETD":
											val = getDateTime(rData[colname]);
											break;
										default:
											val = rData[colname] ? rData[colname] : "";
											break;
									}
									r.push(val);
								});
								rows.push(r);
							}
						}
						tblVessel.dataTable().fnClearTable();
						if (rows.length > 0) {
							tblVessel.dataTable().fnAddData(rows);
						}
					},
					error: function(err) {
						tblVessel.dataTable().fnClearTable();
					},
				});
			});
			// điền dữ liệu vào trong các trường khi nhấn 2 lần vào bảng
			$(document).on("dblclick", "#VesselTable tbody tr", function() {
				var tblVesselSelectedRows = tblVessel
					.getSelectedRows()
					.data()
					.toArray()[0];
				let VoyageKey = tblVesselSelectedRows[_vesselColumns.indexOf("VoyageKey")]
				let VesselName = tblVesselSelectedRows[_vesselColumns.indexOf("VesselName")]
				let InboundVoyage = tblVesselSelectedRows[_vesselColumns.indexOf("InboundVoyage")]
				let OutboundVoyage = tblVesselSelectedRows[_vesselColumns.indexOf("OutboundVoyage")]
				let InLane = tblVesselSelectedRows[_vesselColumns.indexOf("InLane")]
				let OutLane = tblVesselSelectedRows[_vesselColumns.indexOf("OutLane")]
				let ETA = tblVesselSelectedRows[_vesselColumns.indexOf("ETA")]
				let ETD = tblVesselSelectedRows[_vesselColumns.indexOf("ETD")]
				$("#VoyageKey").val(VoyageKey);
				$("#VesselName").val(
					VesselName + " / " + InboundVoyage + " / " + OutboundVoyage
				);

				$("#search").trigger("click");
				vesselModal.modal("hide");
			});
			$(document).on("click", "#VesselTable tbody tr", function() {
				$('#VesselTable tbody tr.selected').removeClass('selected');
				$(this).addClass('selected');
			});
			//Nhấn xác nhận trong bảng chọn tàu sẽ điền dữ liệu vào các trường
			$("#apply-vessel").on("click", function() {
				var tblVesselSelectedRows = tblVessel
					.getSelectedRows()
					.data()
					.toArray()[0];
				let VoyageKey = tblVesselSelectedRows[_vesselColumns.indexOf("VoyageKey")]
				let VesselName = tblVesselSelectedRows[_vesselColumns.indexOf("VesselName")]
				let InboundVoyage = tblVesselSelectedRows[_vesselColumns.indexOf("InboundVoyage")]
				let OutboundVoyage = tblVesselSelectedRows[_vesselColumns.indexOf("OutboundVoyage")]
				let InLane = tblVesselSelectedRows[_vesselColumns.indexOf("InLane")]
				let OutLane = tblVesselSelectedRows[_vesselColumns.indexOf("OutLane")]
				let ETA = tblVesselSelectedRows[_vesselColumns.indexOf("ETA")]
				let ETD = tblVesselSelectedRows[_vesselColumns.indexOf("ETD")]
				$("#VoyageKey").val(VoyageKey);
				$("#VesselName").val(
					VesselName + " / " + InboundVoyage + " / " + OutboundVoyage
				);
			});
		});
		// Modal DTTT
		let _colPayer = ["STT", "CusID", "TaxCode", "CusName", "Address", "PaymentTypeID"];
		$('#search-payer').DataTable({
			paging: true,
			scroller: {
				displayBuffer: 12,
				boundaryScale: 0.5
			},
			columnDefs: [{
					type: "num",
					className: 'text-center',
					targets: [0]
				},
				{
					render: function(data, type, full, meta) {
						return "<div class='wrap-text width-250'>" + data + "</div>";
					},
					targets: _colPayer.getIndexs(["CusName", "Address"])
				}
			],
			buttons: [],
			infor: false,
			scrollY: '45vh'
		});
		let arrCustomer = []

		function load_payer() {
			var tblPayer = $('#search-payer');
			tblPayer.waitingLoad();
			$.ajax({
				url: "/Planning/YardPlanning/loadPayer",
				dataType: 'json',
				type: 'POST',
				success: function(data) {
					arrCustomer = [...data.payers]
					var rows = [];
					if (data.payers && data.payers.length > 0) {
						payers = data.payers;

						var i = 0;
						$.each(payers, function(index, rData) {
							var r = [];
							$.each(_colPayer, function(idx, colname) {
								var val = "";
								switch (colname) {
									case "STT":
										val = i + 1;
										break;
									case "PaymentTypeID":
										val = !rData[colname] ? "" : (rData[colname] == "M" ? "Thu ngay" : "Thu sau");
										break;
									default:
										val = rData[colname] ? rData[colname] : "";
										break;
								}
								r.push(val);
							});
							i++;
							rows.push(r);
						});
					}

					tblPayer.dataTable().fnClearTable();
					if (rows.length > 0) {
						tblPayer.dataTable().fnAddData(rows);
					}
				},
				error: function(err) {
					tblPayer.dataTable().fnClearTable();
					toastr["error"]("Có lỗi xảy ra! Vui lòng liên hệ với kỹ thuật viên! <br/>Cảm ơn!");
				}
			});
		};
		load_payer();
		$(document).on('click', '#search-payer tbody tr', function() {
			$("#search-payer").DataTable().rows('.m-row-selected').nodes().to$().removeClass("m-row-selected");
			$($("#search-payer").DataTable().row($(this)).node()).addClass("m-row-selected");
		});

		$('#select-payer').on('click', function() {
			var r = $('#search-payer tbody').find('tr.m-row-selected').first();
			var cid = $(r).find('td:eq(' + _colPayer.indexOf("CusID") + ')').text();
			var cname = $(r).find('td:eq(' + _colPayer.indexOf("CusName") + ')').text();
			if (!cid) {
				e.preventDefault();
				return false;
			}
			$('#c-CusID').val($(r).find('td:eq(' + _colPayer.indexOf("CusID") + ')').text());
			$('#c-CusID').val(cid + '/' + cname);
			$('#c-CusID').trigger("change");
		});

		$('#search-payer').on('dblclick', 'tbody tr td', function(e) {
			var r = $(this).parent();
			var cid = $(r).find('td:eq(' + _colPayer.indexOf("CusID") + ')').text();
			var cname = $(r).find('td:eq(' + _colPayer.indexOf("CusName") + ')').text();
			if (!cid) {
				e.preventDefault();
				return false;
			}
			$('#c-CusID').val($(r).find('td:eq(' + _colPayer.indexOf("CusID") + ')').text());
			$('#c-CusID').val(cid + '/' + cname);
			$('#payer-modal').modal("toggle");
			$('#taxcode').trigger("change");
		});
		$("#nochooCus").on("click", function() {
			$("#c-CusID").val("")
		})
		// hàm format ngày tháng
		function getSQLDateTimeFormat(date) {
			if (date.length <= 10)
				date += ' 00:00:00';

			if (date.substring(2, 3) == '/')
				return date.substring(6, 10) + '-' + date.substring(3, 5) + '-' + date.substring(0, 2) + date.substring(10, date.length);
			else
				return date;
		}
		// Sự kiện onChange mẫu biểu cước
		$('#trfStandardFilter').on('change', function() {
			if ($("#trfStandardFilter").val() == "") {
				TblMain.dataTable().fnClearTable();
				$("#getIn").val(moment().startOf("day").format("YYYY-MM-DD HH:mm:ss"));
				$("#getOut").val(moment().endOf("day").format("YYYY-MM-DD HH:mm:ss"));
			} else {

				var val = $('select[name=trfStandardFilter]').val();
				let split = (val).split('-');
				let FromDay = moment(split[0], 'DD/MM/YYYY').format('YYYY-MM-DD HH:mm:ss'),
					ToDay = moment(split[1], 'DD/MM/YYYY').format('YYYY-MM-DD HH:mm:ss'),
					Remark = (split[2]).trim();
				// $('#getIn').val((FromDay));
				// $("#getOut").val((ToDay));
				// $('#Remark').val(Remark);

				if (!$(this).val()) {
					TblMain.dataTable().fnClearTable();
					return;
				}
				$("#trfStandardFilter").data("old", $("#trfStandardFilter").val());
				templateChanged();
			}
		});

		function templateChanged() {
			// reset list for save when change tariff
			_lstForSave = [];

			if ($('#trfStandardFilter').val()) {
				loadTariff();
			} else {
				TblMain.dataTable().fnClearTable();
			}
		}

		function loadTariff() {
			TblMain.dataTable().fnClearTable();
			TblMain.waitingLoad();

			var dataSend = {
				action: 'view',
				act: 'load_tariff',
				trfStandard: $('#trfStandardFilter').val()
			};
			$.ajax({
				url: "/Tariff/trfTemplate/getData",
				dataType: 'json',
				data: dataSend,
				type: 'POST',
				success: function(response) {
					if (response.deny) {
						toastr["error"](response.deny);
						TblMain.dataTable().fnClearTable();
						return;
					}
					if (response.error) {
						toastr["error"](response.error);
						TblMain.dataTable().fnClearTable();
						return;
					}

					let _lstTariff = response.data.iPayload;
					if (_lstTariff.length == 0) {
						TblMain.dataTable().fnClearTable();
						return;
					}
					TblMain.dataTable().fnClearTable();
					if (_lstTariff.length > 0) {
						TblMain.dataTable().fnAddData(_lstTariff);
					}
				},
				error: function(err) {
					console.log(err);
					toastr["error"]("Server Error: [loadTariff]");
					TblMain.dataTable().fnClearTable();
				}
			});
		}
		// Thay đổi trên row khi nhấn nút checkbox
		dataTbl.on("change", "td", function(e) {
			dataTbl1.rows(':not(.addnew)').remove().draw(false);
			TblMain1.updateSTT()
			let arr = []
			$(".checkcheck:checked").each(function() {
				let tr = $(this).closest('tr');
				arr = [...arr, $("#MainScreemTable").DataTable().row(tr).data()]
			})
			if (arr?.length > 0) {
				console.log("checkarr", arr)
				TblMain1.dataTable().fnAddData(arr);
			}
		})
		// Sự kiện save
		$("#save").on("click", function() {
			let checkDTTT = $("#c-CusID").val()
			let checkHD = $("#nick_name").val()
			if (checkDTTT && checkHD) {
				var newData = TblMain1.DataTable().rows().data().toArray();
				console.log("checknnewdata", newData)
				if (newData.length > 0) {
					let dataSend = []
					newData.forEach(item => {
						let obj = {}
						obj["ApplyDate"] = $("#getIn").val()
						obj["CargoTypeID"] = item["CargoTypeID"]
						obj["ClassID"] = item["ClassID"]
						obj["CreateTime"] = item["CreateTime"]
						obj["CreatedBy"] = item["CreatedBy"]
						obj["ExpireDate"] = $("#getOut").val()
						obj["JobModeID"] = item["JobModeID"]
						obj["MethodID"] = item["MethodID"]
						obj["ModifiedBy"] = item["ModifiedBy"]
						obj["Price"] = +item["Price"]
						obj["JobTypeID"] = item["JobTypeID"]
						obj["ServiceID"] = item["ServiceID"]
						obj["TRFCode"] = item["TRFCode"]
						obj["TRFDesc"] = item["TRFDesc"]
						obj["TransitID"] = item["TransitID"]
						obj["UnitID"] = item["UnitID"]
						obj["PaymentTypeID"] = $("#payment-type").val()
						obj["VAT"] = item["VAT"] ? +item["VAT"] : 0
						obj["CusTypeID"] = arrCustomer.filter(item => item.CusID == $("#c-CusID").val().search("/") > 0 ? ($("#c-CusID").val()).split("/")[0].trim() : $("#c-CusID").val())[0].CusTypeID
						obj["VoyageKey"] = $("#VoyageKey").val() ? $("#VoyageKey").val() : $("#VesselName").val()
						obj["ContractName"] = $("#nick_name").val()
						obj["CusID"] = $("#c-CusID").val().search("/") > 0 ? ($("#c-CusID").val()).split("/")[0].trim() : $("#c-CusID").val()
						obj["FormGRT"] = item["FormGRT"]
						obj["ToGRT"] = item["ToGRT"]
						obj["CurrencyCode"] = item["CurrencyCode"]
						obj["IsLocalForeign"] = item["IsLocalForeign"]
						obj["ItemID"] = item["ItemID"] ? item["ItemID"] : ""
						dataSend.push(obj)
					})
					var fnew = {
						'data': dataSend
					};
					console.log("checkdataSend", dataSend)
					$.confirm({
						title: 'Thông báo!',
						type: 'orange',
						icon: 'fa fa-warning',
						content: 'Tất cả các thay đổi sẽ được lưu lại!\nTiếp tục?',
						buttons: {
							ok: {
								text: 'Xác nhận lưu',
								btnClass: 'btn-warning',
								keys: ['Enter'],
								action: function() {
									postSave(fnew);
									location.reload()
									// $.blockUI()
								}
							},
							cancel: {
								text: 'Hủy bỏ',
								btnClass: 'btn-default',
								keys: ['ESC']
							}
						}
					});


				} else {
					$('.toast').remove();
					toastr["info"]("Không có dữ liệu thay đổi!");
				}

			} else {
				toastr["error"]("Vui lòng chọn đối tượng thanh toán và tên hợp đồng!");
			}
		})
		// Sự kiện thay đổi DTTT
		// $("#c-CusID").on("change", function() {
		// 	// Cần kiểm tra lại
		// 	// TblMain1.dataTable().fnClearTable();
		// })
		// Hàm lưu dữ liệu
		function postSave(formData) {
			// $.blockUI();
			var saveBtn = $('#');
			saveBtn.button('loading');
			$('.ibox.collapsible-box').blockUI();
			$.ajax({
				url: "/Tariff/trfDiscount/save",
				dataType: 'json',
				data: formData,
				type: 'POST',
				success: function(datas) {
					saveBtn.button('reset');
					$('.ibox.collapsible-box').unblock();
					if (!datas.data) {
						toastr["error"]('Cập nhật dữ liệu thất bại !!');
						return;
					}
					if (datas.data) {
						toastr["success"]('Cập nhật dữ liệu thành công !!');
						TblMain1.DataTable().rows('.addnew').nodes().to$().removeClass("addnew");
						TblMain1.DataTable().rows('.editing').nodes().to$().removeClass("editing");
						TblMain1.updateSTT(0);
					}
				},
				error: function(err) {
					toastr["error"]("Error!");
					saveBtn.button('reset');
					$('.ibox.collapsible-box').unblock();
					console.log(err);
				}
			});
		}
		// Onchange chọn mẫu hợp đồng
		$("#temp").on("change", function() {
			if ($("#temp").val() == "") {
				TblMain1.dataTable().fnClearTable();
				$("#nick_name").val("")
				$("#VesselName").val("")
				$("#c-CusID").val("")
				$("#trfStandardFilter").val("")
				$("#getIn").val(moment().format("YYYY-MM-DD 00:00:00"))
				$("#getOut").val(moment().format("YYYY-MM-DD 23:59:59"))
			} else {
				let param = $("#temp").val().split("*:*")[1]
				let contractName = $("#temp").val().split("*:*")[0]
				let arrParam = dataContractForm.filter(item => item.CusID == param)
				console.log("checkparam", arrParam)
				$.ajax({
					url: "/Tariff/trfDiscount/getDataContractForm",
					dataType: 'json',
					data: {
						param: param,
						getIn: arrParam[0].ApplyDate,
						getOut: arrParam[0].ExpireDate,
						contractName: contractName
					},
					type: 'GET',
					success: function(data) {
						TblMain1.dataTable().fnClearTable();
						if (data?.result.length > 0) {
							console.log("checktarif", $("#trfStandardFilter").val())
							toastr["success"]('Load dữ liệu thành công !!');
							TblMain1.dataTable().fnAddData(data.result);
							$("#nick_name").val(data.result[0].ContractName)
							$("#VesselName").val(data.result[0].VoyageKey)
							$("#c-CusID").val(data.result[0].CusID)
							$("#trfStandardFilter").val("")
							$("#trfStandardFilter").selectpicker("refresh")
							$("#getIn").val(moment(arrParam[0].ApplyDate).format("YYYY-MM-DD HH:mm:ss"))
							$("#getOut").val(moment(arrParam[0].ExpireDate).format("YYYY-MM-DD HH:mm:ss"))
							TblMain.dataTable().fnClearTable();
						}
						if (data?.result.length == 0) {
							toastr["error"]('Load dữ liệu thất bại !!')
							TblMain1.dataTable().fnClearTable();
						}
					},
					error: function(err) {

					}
				});
			}
		})
		// Sự kiện xóa dữ liệu
		$("#delete").on("click", function() {
			var delBtn = $('#delete');
			delBtn.button('loading');
			$('.ibox.collapsible-box').blockUI();
			arrDelete = TblMain1.DataTable().rows('.selected').data().toArray()
			let arrDeleteSend = arrDelete.filter(item => {
				return item.rowguid
			})
			$.ajax({
				url: "/Tariff/trfDiscount/delete",
				dataType: 'json',
				data: {
					data: arrDeleteSend
				},
				type: 'POST',
				success: function(data) {
					delBtn.button('reset');
					$('.ibox.collapsible-box').unblock();
					if (data.data) {
						TblMain1.DataTable().rows('.selected').remove().draw(false);
						TblMain1.updateSTT(0);
						toastr["error"]('Xóa dữ liệu thành công !!');
						location.reload()

					} else {
						toastr["error"]('Xóa dữ liệu thất bại !!')
					}
				},
				error: function(err) {

				}
			});

		})
	})
</script>