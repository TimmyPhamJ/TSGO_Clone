<link href="/assets/vendors/bootstrap-select/dist/css/bootstrap-select.min.css" rel="stylesheet" />
<style>
	.wrapok {
		white-space: normal !important;
	}

	.modal-dialog-mw-py {
		position: fixed;
		top: 20%;
		margin: 0;
		width: 100%;
		padding: 0;
		max-width: 100% !important;
	}

	.modal-dialog-mw-py .modal-body {
		width: 90% !important;
		margin: auto;
	}

	.form-group {
		margin-bottom: 0.5rem !important;
	}

	.grid-hidden {
		display: none;
	}

	.unchecked-Salan {
		pointer-events: none;
	}

	span.col-form-label {
		width: 70%;
		border-bottom: dotted 1px;
		display: inline-block;
		word-wrap: break-word;
	}

	#INV_DRAFT_TOTAL span.col-form-label {
		width: 64%;
		border-bottom: dotted 1px;
		display: inline-block;
		word-wrap: break-word;
	}

	.add-payer {
		flex: 1;
		/* shorthand for: flex-grow: 1, flex-shrink: 1, flex-basis: 0 */
		display: flex;
		justify-content: flex-start;
		align-items: center;
	}

	.add-payer-container {
		transform: scaleX(0);
		position: absolute;
		width: 100%;
		height: 100%;

		top: 0;
		left: 0;

		background: #8e9eab;
		/* fallback for old browsers */
		background: -webkit-linear-gradient(to right, #8e9eab, #eef2f3);
		/* Chrome 10-25, Safari 5.1-6 */
		background: linear-gradient(to right, #8e9eab, #eef2f3);

		-webkit-transition: transform 1s linear;
		/* For Safari 3.1 to 6.0 */
		transition: transform 1s linear;
		transform-origin: left center;
		z-index: 1;
		padding: 7px 0 7px 20px;
	}

	.payer-show {
		transform: scaleX(1);
	}

	#payer-modal .dataTables_filter {
		padding-left: 10px !important;
	}

	.scrollable-menu {
		height: auto;
		max-height: 200px;
		overflow-x: hidden;
	}

	span.sub-text {
		padding-left: 10px;
		font-size: 75%;
		color: #bbb;
		font-style: italic;
	}

	.font-size-17 {
		font-size: 17px !important;
	}

	.dropdown-menu.dropdown-menu-column {
		max-height: 40vh;
		overflow-y: auto;
	}

	#items-modal .dataTables_filter {
		width: 200px;
	}

	#items-modal .dataTables_filter input[type="search"] {
		width: 65%;
	}

	#items-modal .dataTables_filter>label::after {
		right: 45px !important;
	}
</style>
<div class="row" style="font-size: 12px !important;">
	<div class="col-xl-12">
		<div class="ibox collapsible-box">
			<i class="la la-angle-double-up dock-right"></i>
			<div class="ibox-head">
				<div class="ibox-title">LỆNH HẠ HÀNG</div>
			</div>
			<div class="ibox-body pt-3 pb-2 bg-f9 border-e">
				<div class="row">
					<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12">
						<h5 class="text-primary">Thông tin lệnh</h5>
					</div>
				</div>
				<div class="row my-box pb-1">
					<div class="col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12 mt-3">
						<div class="row" id="row-transfer-left">
							<div class="col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12">
								<div class="row form-group">
									<label class="col-sm-4 col-form-label">Ngày lệnh</label>
									<div class="col-sm-8 input-group input-group-sm">
										<div class="input-group">
											<input class="form-control form-control-sm" id="ref-date" type="text" placeholder="Ngày lệnh" readonly />
										</div>
									</div>
								</div>
								<div class="row form-group">
									<label class="col-sm-4 col-form-label">Phương án</label>
									<div class="col-sm-8">
										<select id="class-id" class="selectpicker" data-style="btn-default btn-sm" data-width="100%">
											<option value="2" cjmode="HBAI" dmethod="BAI-XE" dmethod-salan="BAI-SALAN" selected>
												Hạ bãi
											</option>
											<option value="2" cjmode="XGTH" dmethod="TAU-XE" dmethod-salan="TAU-SALAN">
												Xuất giao thẳng
											</option>
										</select>
									</div>
								</div>
								<div class="row form-group">
									<div class="col-sm-4 col-form-label">
										<label class="checkbox checkbox-blue">
											<input type="checkbox" name="chkSalan" id="chkSalan" />
											<span class="input-span"></span>
											Sà lan
										</label>
									</div>
									<div class="col-sm-8 input-group input-group-sm">
										<div id="barge-ischecked" class="input-group unchecked-Salan">
											<input class="form-control form-control-sm" id="barge-info" type="text" placeholder="Mã/Năm/Chuyến" readonly />
											<span class="input-group-addon bg-white btn text-warning" id="btn-search-barge" data-toggle="modal" data-target="#barge-modal" title="Chọn" style="padding: 0 0.5rem;"><i class="fa fa-search"></i></span>
										</div>
									</div>
								</div>
							</div>
							<div class="col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12">
								<div class="row form-group">
									<label class="col-sm-4 col-form-label">Tàu/chuyến *</label>
									<div class="col-sm-8 input-group">
										<input class="form-control form-control-sm input-required" id="shipid" placeholder="Tàu/chuyến" type="text" readonly autocomplete="off" />
										<span class="input-group-addon bg-white btn mobile-hiden text-warning" style="padding: 0 0.5rem;" title="chọn tàu" data-toggle="modal" data-target="#ship-modal">
											<i class="ti-search"></i>
										</span>
									</div>
								</div>
								<div class="row form-group">
									<label class="col-sm-4 col-form-label" title="Chủ hàng">Chủ hàng *</label>
									<div class="col-sm-8">
										<input class="form-control form-control-sm input-required" id="shipper-name" type="text" placeholder="Chủ hàng" maxlength="200" />
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12 mt-3">
						<div class="row">
							<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12">
								<div class="row form-group" style="border-bottom: 1px solid #eee;">
									<div class="col-12 col-form-label">
										<label class="checkbox checkbox-blue">
											<input type="checkbox" name="chkServiceAttach" id="chkServiceAttach" />
											<span class="input-span"></span>
											Đính kèm dịch vụ
										</label>
									</div>
								</div>
							</div>
							<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12" id="col-attach-service" style="display: none;">
								<table id="tb-attach-srv" class="table table-striped display nowrap single-row-select" cellspacing="0" style="width: 99.8%;">
									<thead>
										<tr>
											<th class="editor-cancel data-type-checkbox" style="max-width: 30px;">
												Chọn
											</th>
											<th col-name="CJMode_CD">Mã phương án</th>
											<th col-name="CJModeName">Tên phương án</th>
											<th col-name="Cont_Count">Số lượng</th>
										</tr>
									</thead>
									<tbody></tbody>
								</table>
							</div>
						</div>
						<div class="row" id="row-transfer-right">
							<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-1" id="col-transfer">
								<div class="row form-group">
									<label class="col-sm-2 col-form-label">Đại diện</label>

									<div class="col-sm-10 input-group">
										<input class="form-control form-control-sm mr-2" id="cmnd" user-input="0" type="text" placeholder="Số CMND /Số ĐT" maxlength="20" />
										<input class="form-control form-control-sm mr-2" id="personal-name" user-input="0" type="text" placeholder="Tên người đại diện" maxlength="50" />
										<input class="form-control form-control-sm" id="mail" user-input="0" type="text" placeholder="Địa chỉ Email" style="width: 140px;" maxlength="100" />
									</div>
								</div>
								<div class="row form-group">
									<label class="col-sm-2 col-form-label">Ghi chú</label>
									<div class="col-sm-10 input-group input-group-sm">
										<input class="form-control form-control-sm" id="remark" type="text" placeholder="Ghi chú" maxlength="500" />
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="row mt-2 pt-2 my-box">
					<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12">
						<div class="row">
							<div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-xs-3">
								<div class="row form-group">
									<label class="col-sm-4 col-form-label" title="Đối tượng thanh toán">ĐTTT</label>
									<div class="col-sm-8">
										<div class="input-group">
											<input class="form-control form-control-sm input-required" id="taxcode" placeholder="ĐTTT" type="text" />
											<span class="input-group-addon bg-white btn mobile-hiden text-warning" style="padding: 0 0.5rem;" title="Chọn đối tượng thanh toán" data-toggle="modal" data-target="#payer-modal">
												<i class="ti-search"></i>
											</span>
										</div>
									</div>
									<input class="hiden-input" id="cusID" readonly />
								</div>
							</div>
							<div class="col-xl-9 col-lg-9 col-md-9 col-sm-9 col-xs-9 col-form-label mt-1">
								<i class="fa fa-id-card" style="font-size: 15px !important;"></i>-<span id="payer-name">[Tên đối tượng thanh toán]</span>&emsp;
							</div>
						</div>
						<div class="row">
							<div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-xs-3">
								<div class="row form-group">
									<label class="col-sm-4 col-form-label" title="Hình thức thanh toán">HTTT *</label>
									<div class="col-sm-8">
										<select id="payment-type" class="selectpicker" data-style="btn-default btn-sm" data-width="100%">
											<!-- <option value="M">THU NGAY</option> -->
											<option value="C">THU SAU</option>
										</select>
									</div>
								</div>
							</div>
							<div class="col-xl-9 col-lg-9 col-md-9 col-sm-9 col-xs-9 col-form-label mt-1">
								<i class="fa fa-home" style="font-size: 15px !important;"></i>-<span id="payer-addr">
									[Địa chỉ]</span>&emsp;
							</div>
						</div>
					</div>
				</div>
				<div class="row mt-2 pt-2 my-box">
					<div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-xs-6">
						<div class="row form-group ml-auto">
							<button id="addnew" class="btn btn-outline-success btn-sm mr-1">
								<span class="btn-icon"><i class="fa fa-plus"></i>Thêm dòng</span>
							</button>
							<button id="remove" class="btn btn-outline-danger btn-sm mr-1">
								<span class="btn-icon"><i class="fa fa-trash"></i>Xóa</span>
							</button>
							<button id="import-file" class="btn btn-outline-warning btn-sm mr-1">
								<span class="btn-icon"><i class="fa fa-share-square"></i>Import File</span>
							</button>
							<a class="linked col-form-label text-primary" href="download/lenh-ha-cont-hang.xlsx" style="padding-left: 10px;">Tải tệp mẫu</a>
						</div>
					</div>
					<div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-xs-6 text-right">
						<div class="row form-group" style="display: inline-block; margin: 0 auto;">
							<label class="radio radio-outline-success pr-4">
								<input name="view-opt" type="radio" id="chk-view-cont" value="cont" checked />
								<span class="input-span"></span>
								Danh sách hàng hóa
							</label>
							<label class="radio radio-outline-success pr-4" style="display: none;">
								<input name="view-opt" id="chk-view-inv" value="inv" type="radio" />
								<span class="input-span"></span>
								Tính cước
							</label>

							<button id="show-payment-modal" class="btn btn-primary btn-sm" title="Thông tin thanh toán" data-toggle="modal">
								<i class="fa fa-save"></i>
								Lưu thu sau
							</button>
						</div>
					</div>
				</div>
			</div>
			<div class="row grid-toggle" style="padding: 10px 12px; margin-top: -4px;">
				<div class="col-md-12 col-sm-12 col-xs-12 table-responsive">
					<table id="tbl-detail" class="table table-striped display nowrap" cellspacing="0" style="width: 99.9%;">
						<thead>
							<tr>
								<th col-name="STT">STT</th>
								<th col-name="BookingNo">Số Booking</th>
								<th col-name="ItemID" show-target="#items-modal">Hàng Hóa</th>
								<th col-name="Quantity" style="text-align: center!important;" class="data-type-numeric">Số Lượng</th>
								<th col-name="CargoWeight" style="text-align: center!important;" class="data-type-numeric">Trọng Lượng</th>
								<th col-name="Volume" style="text-align: center!important;" class="data-type-numeric">Thể Tích</th>
								<th col-name="UnitName" show-target="#unit-modal">ĐVT</th>
								<th col-name="POD">Cảng dỡ</th>
								<th col-name="FPOD">Cảng đích</th>
								<th col-name="TransitID">Loại Hình</th>
							</tr>
						</thead>
						<tbody></tbody>
					</table>
				</div>
				<div class="col-md-12 col-sm-12 col-xs-12 table-responsive grid-hidden">
					<table id="tbl-inv" class="table table-striped display nowrap" cellspacing="0" style="min-width: 99.5%;">
						<thead>
							<tr>
								<th>STT</th>
								<th>Số phiếu tính cước</th>
								<th>Số lệnh</th>
								<th>Mã biểu cước</th>
								<th>Tên biểu cước</th>
								<th>ĐVT</th>
								<th>Loại công việc</th>
								<th>PTGN</th>
								<th>Loại hàng</th>
								<th>Kích cỡ ISO</th>
								<th>Hàng Rỗng (F/E)</th>
								<th>Nội Ngoại (F/L)</th>
								<th>Số lượng</th>
								<th>Đơn giá</th>
								<th>Chiết khấu (%)</th>
								<th>Đơn giá CK</th>
								<th>Đơn giá sau CK</th>
								<th>Thành tiền</th>
								<th>Thuế (%)</th>
								<th>Tiền thuế</th>
								<th>Tổng tiền</th>
								<th>Loại tiền</th>
								<th>IX_CD</th>
								<th>CNTR_JOB_TYPE</th>
								<th>VAT_CHK</th>
								<th>Remark</th>
								<th>TRF_DESC_MORE</th>
							</tr>
						</thead>

						<tbody></tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>

<!--payer modal-->
<div class="modal fade" id="payer-modal" tabindex="-1" role="dialog" aria-labelledby="groups-modalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-mw" role="document" style="min-width: 960px;">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="groups-modalLabel">
					Chọn đối tượng thanh toán
				</h5>
			</div>
			<div class="modal-body" style="padding: 10px 0;">
				<div class="table-responsive">
					<table id="search-payer" class="table table-striped display nowrap table-popup single-row-select" cellspacing="0" style="width: 99.9%;">
						<thead>
							<tr>
								<th>STT</th>
								<th>Mã ĐT</th>
								<th>MST</th>
								<th>Tên</th>
								<th>Địa chỉ</th>
								<th>HTTT</th>
							</tr>
						</thead>
						<tbody></tbody>
					</table>
				</div>
			</div>
			<div class="modal-footer" style="position: relative; padding: 22px 15px !important;">
				<div class="add-payer-container">
					<div class="row">
						<div class="col-sm-11 col-xs-11">
							<div class="row">
								<div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-xs-4">
									<div class="row form-group">
										<label class="col-sm-3 col-form-label" title="Mã số thuế">MST</label>
										<div class="col-sm-9">
											<input class="form-control form-control-sm" id="add-payer-taxcode" type="text" placeholder="Mã số thuế" />
										</div>
									</div>
								</div>

								<div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-xs-8">
									<div class="row form-group">
										<label class="col-sm-2 col-form-label" title="Tên đối tượng thanh toán">Tên</label>
										<div class="col-sm-10">
											<input class="form-control form-control-sm" id="add-payer-name" type="text" placeholder="Tên" />
										</div>
									</div>
								</div>
							</div>

							<div class="row">
								<div class="col-sm-12 col-xs-12">
									<div class="row form-group">
										<label class="col-sm-1 col-form-label" title="Địa chỉ">Địa chỉ</label>
										<div class="col-sm-11">
											<input class="form-control form-control-sm" id="add-payer-address" type="text" placeholder="Địa chỉ" />
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="col-sm-1 col-xs-1" style="margin: auto 0;">
							<div class="row">
								<div class="col-sm-12 col-xs-12">
									<div class="row form-group">
										<a id="save-payer" class="btn btn-sm text-primary" title="Lưu" style="padding: 14px; font-size: 1.2rem;">
											<span class="btn-icon"><i class="fa fa-save"></i></span>
										</a>
									</div>
									<div class="row form-group">
										<a id="close-payer-content" class="btn btn-sm text-danger" title="Đóng lại" style="padding: 14px; font-size: 1.3rem;">
											<span class="btn-icon"><i class="fa fa-close"></i></span>
										</a>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="add-payer">
					<button id="b-add-payer" class="btn btn-sm btn-outline-success" title="Thêm khách hàng">
						<i class="fa fa-plus"></i>
						Thêm khách hàng
					</button>
				</div>

				<button type="button" id="select-payer" class="btn btn-sm btn-outline-primary" data-dismiss="modal">
					<i class="fa fa-check"></i>
					Chọn
				</button>
				<button type="button" class="btn btn-sm btn-outline-secondary" data-dismiss="modal">
					<i class="fa fa-close"></i>
					Đóng
				</button>
			</div>
		</div>
	</div>
</div>

<!--select barge-->
<div class="modal fade" id="barge-modal" tabindex="-1" role="dialog" aria-labelledby="groups-modalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-mw" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="groups-modalLabel">Chọn sà lan</h5>
			</div>
			<div class="modal-body">
				<div class="table-responsive">
					<table id="search-barge" class="table table-striped display nowrap table-popup single-row-select" cellspacing="0" style="width: 99.8%;">
						<thead>
							<tr>
								<th style="max-width: 15px;">STT</th>
								<th>Mã sà lan</th>
								<th>Tên sà lan</th>
								<th>Chuyến nhập</th>
								<th>Chuyến xuất</th>
							</tr>
						</thead>
						<tbody></tbody>
					</table>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" id="select-barge" class="btn btn-success" data-dismiss="modal">
					Chọn
				</button>
				<button type="button" class="btn btn-secondary" data-dismiss="modal">
					Đóng
				</button>
			</div>
		</div>
	</div>
</div>

<!--payment modal-->
<div class="modal fade" id="payment-modal" tabindex="-1" role="dialog" aria-labelledby="groups-modalLabel" aria-hidden="true" data-backdrop="static" data-whatever="id">
	<div class="modal-dialog modal-dialog-mw-py" role="document">
		<div class="modal-content p-3">
			<button type="button" class="close text-right" data-dismiss="modal">
				&times;
			</button>
			<div class="modal-body px-5">
				<div class="row">
					<div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-xs-8">
						<div class="form-group pb-1">
							<h5 class="text-primary" style="border-bottom: 1px solid #eee;">
								Thông tin thanh toán
							</h5>
						</div>
						<div class="row form-group">
							<label class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-form-label" title="Mã KH/ MST">Mã KH/
								MST</label>
							<span class="col-form-label" id="p-taxcode"></span>
						</div>
						<div class="row form-group">
							<label class="col-sm-3 col-form-label">Tên</label>
							<span class="col-form-label" id="p-payername"></span>
						</div>
						<div class="row form-group">
							<label class="col-sm-3 col-form-label">Địa chỉ</label>
							<span class="col-form-label" id="p-payer-addr"></span>
						</div>

						<div class="row form-group">
							<label class="col-sm-3 col-form-label">Thanh toán</label>
							<div class="col-sm-9">
								<div class="row">
									<a class="col-form-label pr-5" id="p-money" style="pointer-events: none;">
										<i class="fa fa-square"></i> THU NGAY
									</a>
									<a class="col-form-label" id="p-credit" style="pointer-events: none;">
										<i class="fa fa-check-square"></i> THU SAU
									</a>
								</div>
							</div>
						</div>

						<div class="row form-group mt-3" id="publish-type">
							<div class="col-9 ml-sm-auto">
								<div class="row input-group">
									<label class="col-form-label radio radio-outline-blue text-blue mr-4 mx-auto">
										<input name="publish-opt" type="radio" value="dft" />
										<span class="input-span" style="margin-top: calc(0.5rem - 1px * 2);"></span>
										PHIẾU TẠM THU
									</label>
									<label class="col-form-label radio radio-outline-danger text-danger mr-4 mx-auto">
										<input name="publish-opt" value="m-inv" type="radio" />
										<span class="input-span" style="margin-top: calc(0.5rem - 1px * 2);"></span>
										HÓA ĐƠN GIẤY
									</label>
									<label class="col-form-label radio radio-outline-warning text-warning mx-auto">
										<input name="publish-opt" value="e-inv" type="radio" checked />
										<span class="input-span" style="margin-top: calc(0.5rem - 1px * 2);"></span>
										HÓA ĐƠN ĐIỆN TỬ
									</label>
								</div>
							</div>
						</div>
					</div>

					<div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-xs-4" id="INV_DRAFT_TOTAL">
						<div class="form-group pb-1">
							<h5 class="text-primary" style="border-bottom: 1px solid #eee;">
								Tổng tiền thanh toán
							</h5>
						</div>
						<div class="row form-group">
							<label class="col-sm-4 col-form-label">Thành tiền</label>
							<span class="col-form-label text-right font-bold text-blue" id="AMOUNT"></span>
						</div>
						<div class="row form-group hiden-input">
							<label class="col-sm-4 col-form-label">Giảm trừ</label>
							<span class="col-form-label text-right font-bold text-blue" id="DIS_AMT"></span>
						</div>
						<div class="row form-group">
							<label class="col-sm-4 col-form-label">Tiền thuế</label>
							<span class="col-form-label text-right font-bold text-blue" id="VAT"></span>
						</div>
						<div class="row form-group">
							<label class="col-sm-4 col-form-label">Tổng tiền</label>
							<span class="col-form-label text-right font-bold text-danger" id="TAMOUNT"></span>
						</div>
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<div id="dv-cash" style="margin: 0 auto;">
					<button id="pay-atm" class="btn btn-rounded btn-gradient-purple">
						<span class="btn-icon"><i class="fa fa-id-card"></i> Xác nhận thanh toán</span>
					</button>
					<button class="btn btn-rounded btn-rounded btn-gradient-lime hiden-input">
						<span class="btn-icon"><i class="fa fa-id-card"></i> Thanh toán bằng thẻ MASTER,
							VISA</span>
					</button>
				</div>
				<div id="dv-credit" class="hiden-input" style="margin: 0 auto;">
					<button id="save-credit" class="btn btn-rounded btn-rounded btn-gradient-lime btn-fix">
						<span class="btn-icon"><i class="fa fa-save"></i> Lưu dữ liệu
						</span>
					</button>
				</div>
			</div>
		</div>
	</div>
</div>

<!--select ship-->
<div class="modal fade" id="ship-modal" tabindex="-1" role="dialog" aria-labelledby="groups-modalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-mw" role="document" style="min-width: 960px;">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="groups-modalLabel">Chọn tàu</h5>
			</div>
			<div class="modal-body" style="padding: 10px 0;">
				<div class="row col-xl-12">
					<div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 mt-1">
						<div class="form-group">
							<label class="radio radio-outline-primary" style="padding-right: 15px !important;">
								<input name="shipArrStatus" type="radio" value="1" checked />
								<span class="input-span"></span>
								Đến cảng
							</label>
							<label class="radio radio-outline-primary">
								<input name="shipArrStatus" value="2" type="radio" />
								<span class="input-span"></span>
								Rời Cảng
							</label>
						</div>
					</div>
					<div class="col-lg-8 col-md-8 col-sm-12 col-xs-12 pr-0">
						<div class="row form-group">
							<div class="col-sm-12 pr-0">
								<div class="input-group">
									<input class="form-control form-control-sm" id="search-ship-name" type="text" placeholder="Nhập tên tàu" />
									<span id="btn-search-ship" class="input-group-addon bg-white btn mobile-hiden text-warning">
										<i class="ti-search"></i>
									</span>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="table-responsive">
					<table id="search-ship" class="table table-striped display nowrap table-popup single-row-select" cellspacing="0" style="width: 99.8%;">
						<thead>
							<tr>
								<th>Mã Tàu</th>
								<th style="width: 20px;">STT</th>
								<th>Tên Tàu</th>
								<th>Chuyến Nhập</th>
								<th>Chuyến Xuất</th>
								<th>ETB</th>
								<th>ShipKey</th>
								<th>ATB</th>
								<th>LaneID</th>
							</tr>
						</thead>
						<tbody></tbody>
					</table>
				</div>
			</div>
			<div class="modal-footer">
				<div style="display: flex;flex: 1;justify-content: flex-start;align-items: center;">
					<button type="button" id="reload-ship" class="btn btn-sm btn-warning">
						<i class="fa fa-refresh"></i>
						Tải lại
					</button>
				</div>
				<button type="button" id="select-ship" class="btn btn-sm btn-outline-primary" data-dismiss="modal">
					<i class="fa fa-check"></i>
					Chọn
				</button>
				<button type="button" class="btn btn-sm btn-outline-secondary" data-dismiss="modal">
					<i class="fa fa-close"></i>
					Đóng
				</button>
			</div>
		</div>
	</div>
</div>

<!--items modal-->
<div class="modal fade" id="items-modal" tabindex="-1" data-backdrop="false" role="dialog" aria-labelledby="groups-modalLabel" aria-hidden="true" data-whatever="id" style="padding-left: 14%;">
	<div class="modal-dialog" role="document" style="width: 550px !important;">
		<div class="modal-content" style="border-radius: 4px;">
			<div class="modal-header">
				<h5 class="modal-title text-primary" id="groups-modalLabel">
					Danh sách Hàng hóa
				</h5>
			</div>
			<div class="modal-body">
				<table id="tbl-items" class="table table-striped display nowrap" cellspacing="0" style="width: 99.5%;">
					<thead>
						<tr>
							<th col-name="STT">STT</th>
							<th col-name="ItemID">Mã hàng</th>
							<th col-name="ItemName">Tên</th>
							<th col-name="CargoTypeID">Mã nhóm</th>
						</tr>
					</thead>
					<tbody></tbody>
				</table>
			</div>
			<div class="modal-footer">
				<div style="margin: 0 auto !important;">
					<button class="btn btn-sm btn-rounded btn-gradient-blue btn-labeled btn-labeled-left btn-icon" id="apply-items" data-dismiss="modal">
						<span class="btn-label"><i class="ti-check"></i></span>Xác nhận
					</button>
					<button class="btn btn-sm btn-rounded btn-gradient-peach btn-labeled btn-labeled-left btn-icon" data-dismiss="modal">
						<span class="btn-label"><i class="ti-close"></i></span>Đóng
					</button>
				</div>
			</div>
		</div>
	</div>
</div>

<!--unit modal-->
<div class="modal fade" id="unit-modal" tabindex="-1" data-backdrop="false" role="dialog" aria-labelledby="groups-modalLabel" aria-hidden="true" data-whatever="id" style="padding-left: 14%;">
	<div class="modal-dialog" role="document" style="width: 550px !important;">
		<div class="modal-content" style="border-radius: 4px;">
			<div class="modal-header">
				<h5 class="modal-title text-primary" id="groups-modalLabel">
					Danh sách Đơn vị tính
				</h5>
			</div>
			<div class="modal-body">
				<table id="tbl-unit" class="table table-striped display nowrap" cellspacing="0" style="width: 99.5%;">
					<thead>
						<tr>
							<th col-name="STT">STT</th>
							<th col-name="UnitID">Mã</th>
							<th col-name="UnitName">Tên</th>
						</tr>
					</thead>
					<tbody></tbody>
				</table>
			</div>
			<div class="modal-footer">
				<div style="margin: 0 auto !important;">
					<button class="btn btn-sm btn-rounded btn-gradient-blue btn-labeled btn-labeled-left btn-icon" id="apply-unit" data-dismiss="modal">
						<span class="btn-label"><i class="ti-check"></i></span>Xác nhận
					</button>
					<button class="btn btn-sm btn-rounded btn-gradient-peach btn-labeled btn-labeled-left btn-icon" data-dismiss="modal">
						<span class="btn-label"><i class="ti-close"></i></span>Đóng
					</button>
				</div>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
	$(document).ready(function() {
		var _colsPayment = ["STT", "DRAFT_INV_NO", "REF_NO", "TRF_CODE", "TRF_DESC", "INV_UNIT", "JobMode", "DMETHOD_CD", "ItemID", "ISO_SZTP", "FE", "IsLocal", "QTY", "standard_rate", "DIS_RATE", "extra_rate", "UNIT_RATE", "AMOUNT", "VAT_RATE", "VAT", "TAMOUNT", "CURRENCYID", "IX_CD", "CNTR_JOB_TYPE", "VAT_CHK", "Remark", "TRF_DESC_MORE"],
			_cols = ["STT", "BookingNo", "ItemID", "Quantity", "CargoWeight", "Volume", "UnitID", "POD", "FPOD", "TransitID"],
			_colPayer = ["STT", "CusID", "TaxCode", "CusName", "Address", "PaymentTypeID"],
			_colsAttachServices = ["Select", "CjMode_CD", "CJModeName", "Cont_Count"];

		var _lstOrder = [];
		var _ports = [];
		var _itemList = <%- JSON.stringify(locals.items || []) %>;
		var _units = <%- JSON.stringify(locals.units || []) %>;
		var _selectShipKey = '',
			_laneID = '',
			tblDetails = $('#tbl-detail'),
			tblInv = $("#tbl-inv"),
			tblAttach = $('#tb-attach-srv');

		var payers = [],
			_attachServicesChecker = [],
			_lstAttachService = [],
			_localForeign = [{
				"Code": "L",
				"Name": "Nội"
			}, {
				"Code": "F",
				"Name": "Ngoại"
			}];

		var _transits = <%- JSON.stringify(locals.transits || []) %>;

		//INIT TABLES
		$('#search-barge').DataTable({
			paging: false,
			infor: false,
			scrollY: '25vh'
		});

		$('#search-ship').DataTable({
			scrollY: '35vh',
			paging: false,
			order: [
				[1, 'asc']
			],
			columnDefs: [{
					className: "input-hidden",
					targets: [0, 6, 8]
				},
				{
					className: "text-center",
					targets: [1]
				}
			],
			buttons: [],
			info: false,
			searching: false
		});

		$("#tbl-items").DataTable({
			data: _itemList.map((item, index) => {
				return [index + 1, item.ItemID, item.ItemName, item.CargoTypeID]
			}),
			scrollY: '40vh',
			columnDefs: [{
				type: "num",
				className: "text-center",
				targets: 0
			}],
			order: [
				[0, 'asc']
			],
			paging: false,
			keys: true,
			autoFill: {
				focus: 'focus'
			},
			select: {
				style: 'single',
				info: false
			},
			buttons: [],
			rowReorder: false
		});

		$("#tbl-unit").DataTable({
			data: _units.map((item, index) => {
				return [index + 1, item.UnitID, item.UnitName]
			}),
			scrollY: '40vh',
			columnDefs: [{
				type: "num",
				className: "text-center",
				targets: 0
			}],
			order: [
				[0, 'asc']
			],
			paging: false,
			keys: true,
			autoFill: {
				focus: 'focus'
			},
			select: {
				style: 'single',
				info: false
			},
			buttons: [],
			rowReorder: false
		});

		$('#search-payer').DataTable({
			paging: true,
			scroller: {
				displayBuffer: 12,
				boundaryScale: 0.5
			},
			columnDefs: [{
					type: "num",
					className: 'text-center',
					targets: [0]
				},
				{
					render: function(data, type, full, meta) {
						return "<div class='wrap-text width-250'>" + data + "</div>";
					},
					targets: _colPayer.getIndexs(["CusName", "Address"])
				}
			],
			buttons: [],
			infor: false,
			scrollY: '45vh'
		});

		tblDetails.DataTable({
			info: false,
			paging: false,
			searching: false,
			buttons: [],
			scrollY: '35vh',
			columnDefs: [{
					type: "num",
					className: "text-center",
					targets: _cols.indexOf("STT")
				},
				{
					className: "show-dropdown",
					targets: _cols.indexOf("TransitID")
				},
				{
					className: "show-more input-required",
					targets: _cols.getIndexs(["ItemID"]),
					render: function(data, type, full, meta) {
						if (type == "display") {
							return _itemList.filter(p => p.ItemID == data).map(p => p.ItemName)[0] || ""
						}
					}
				},
				{
					className: "show-more input-required",
					targets: _cols.getIndexs(["UnitID"]),
					render: function(data, type, full, meta) {
						if (type == "display") {
							return _units.filter(p => p.UnitID == data).map(p => p.UnitName)[0] || ""
						}
					}
				},
				{
					className: "text-right input-required",
					render: $.fn.dataTable.render.number(',', '.', 2),
					targets: _cols.getIndexs(["Quantity", "CargoWeight"])
				},
				{
					className: "text-right",
					render: $.fn.dataTable.render.number(',', '.', 2),
					targets: _cols.getIndexs(["Volume"])
				},
				{
					render: function(data, type, full, meta) {
						var temp = Array.isArray(data) ? data[0] : data;
						return temp ? temp.trim().toUpperCase() : "";
					},
					className: "text-center input-required",
					targets: _cols.getIndexs(["BookingNo"])
				},
				{
					render: function(data, type, full, meta) {
						var temp = Array.isArray(data) ? data[0] : data;
						return temp ? temp.trim().toUpperCase() : "";
					},
					className: "text-center show-dropdown input-required",
					targets: _cols.getIndexs(["POD", "FPOD"])
				}
			],
			order: [],
			keys: true,
			autoFill: {
				focus: 'focus',
				columns: ':not( :eq( ' + _cols.indexOf('STT') + ') )'
			},
			select: true,
			rowReorder: false
		});

		tblInv.DataTable({
			info: false,
			paging: false,
			searching: false,
			buttons: [],
			columnDefs: [{
					targets: _colsPayment.getIndexs(['STT', 'CURRENCYID']),
					className: "text-center"
				},
				{
					targets: _colsPayment.indexOf('QTY'),
					className: "text-right"
				},
				{
					targets: _colsPayment.getIndexs(["standard_rate", "DIS_RATE", "extra_rate", "UNIT_RATE", "AMOUNT", "VAT_RATE", "VAT", "TAMOUNT"]),
					className: "text-right",
					render: $.fn.dataTable.render.number(',', '.', 2)
				},
				{
					targets: _colsPayment.getIndexs(["IX_CD", "CNTR_JOB_TYPE", "VAT_CHK", "Remark", "TRF_DESC_MORE"]),
					className: "hiden-input"
				}
			],
			scrollY: '30vh',
			createdRow: function(row, data, dataIndex) {
				if (!data[_colsPayment.indexOf('TRF_CODE')]) {
					$(row).addClass('row-total');

					$('td:eq(0)', row).attr('colspan', 17);
					$('td:eq(0)', row).addClass('text-center');
					for (var i = 1; i <= 16; i++) {
						$('td:eq(' + i + ')', row).css('display', 'none');
					}

					this.api().cell($('td:eq(0)', row)).data('TỔNG CỘNG');
				}
			}
		});

		tblAttach.DataTable({
			paging: false,
			columnDefs: [{
				className: 'text-center',
				orderDataType: 'dom-text',
				type: 'string',
				targets: _colsAttachServices.indexOf("Select")
			}],
			order: [],
			buttons: [],
			info: false,
			searching: false,
			scrollY: '16vh'
		});
		//END INIT TABLES

		$('#ref-date').val(moment().format('DD/MM/YYYY HH:mm:ss'));

		search_ship();
		load_payer();

		$("#cntrAdd-Temperature").on("keypress", function(e) {
			if (e["key"] == "+" || e["keyCode"] == 61 || e["which"] == 61) {
				e.preventDefault();
				e.stopPropagation();
				return false;
			}
		});

		$('input[name="chkSalan"]').on('change', function() {
			$('#barge-ischecked').toggleClass('unchecked-Salan');
			if (!$(this).is(':checked')) {
				$('#barge-info').val('');
				$('#barge-info').trigger('change');
			}
		});

		$('#b-add-payer').on("click", function() {
			$('.add-payer-container').addClass("payer-show");
		});

		$('#close-payer-content').on("click", function() {
			$('.add-payer-container').removeClass("payer-show");
		});

		///////// SEARCH PAYER
		$(document).on('click', '#search-payer tbody tr', function() {
			$("#search-payer").DataTable().rows('.m-row-selected').nodes().to$().removeClass("m-row-selected");
			$($("#search-payer").DataTable().row($(this)).node()).addClass("m-row-selected");
		});

		$('#select-payer').on('click', function() {
			var r = $('#search-payer tbody').find('tr.m-row-selected').first();
			var cid = $(r).find('td:eq(' + _colPayer.indexOf("CusID") + ')').text();
			if (!cid) {
				e.preventDefault();
				return false;
			}

			$('#taxcode').val($(r).find('td:eq(' + _colPayer.indexOf("TaxCode") + ')').text());
			$('#cusID').val(cid);

			fillPayer();

			$('#taxcode').trigger("change");
		});

		$('#search-payer').on('dblclick', 'tbody tr td', function(e) {
			var r = $(this).parent();
			var cid = $(r).find('td:eq(' + _colPayer.indexOf("CusID") + ')').text();
			if (!cid) {
				e.preventDefault();
				return false;
			}
			$('#taxcode').val($(r).find('td:eq(' + _colPayer.indexOf("TaxCode") + ')').text());
			$('#cusID').val(cid);

			fillPayer();

			$('#payer-modal').modal("toggle");
			$('#taxcode').trigger("change");
		});
		///////// END SEARCH PAYER

		///////// SEARCH BARGE
		$('#btn-search-barge').on('click', function() {
			search_barge();
		});

		$(document).on('click', '#search-barge tbody tr', function() {
			$('.m-row-selected').removeClass('m-row-selected');
			$(this).addClass('m-row-selected');
		});
		$('#select-barge').on('click', function() {
			var r = $('#search-barge tbody').find('tr.m-row-selected').first();
			$('#barge-info').val($(r).find('td:eq(1)').text() + "/" + $(r).find('td:eq(3)').text() + "/" + $(r).find('td:eq(4)').text());
			$('#barge-info').trigger("change");
		});
		$('#search-barge').on('dblclick', 'tbody tr td', function() {
			var r = $(this).parent();
			$('#barge-info').val($(r).find('td:eq(1)').text() + "/" + $(r).find('td:eq(3)').text() + "/" + $(r).find('td:eq(4)').text());
			$('#barge-modal').modal("toggle");

			$('#barge-info').trigger("change");
		});
		///////// END SEARCH BARGE

		///////// SEARCH SHIP
		$('#btn-search-ship').on('click', function() {
			search_ship();
		});

		$(document).on('click', '#search-ship tbody tr', function() {
			$('.m-row-selected').removeClass('m-row-selected');
			$(this).addClass('m-row-selected');
		});
		$('#search-ship-name').on('keypress', function(e) {
			if (e.which == 13) {
				search_ship();
			}
		});
		$('#select-ship').on('click', function(e) {
			var r = $('#search-ship tbody').find('tr.m-row-selected').first();

			var cid = $(r).find('td:eq(0)').text();
			if (!cid) {
				e.preventDefault();
				return false;
			}

			$('#shipid').val($(r).find('td:eq(0)').text() + "/" + $(r).find('td:eq(3)').text() + "/" + $(r).find('td:eq(4)').text());
			$('#shipid').removeClass('error');

			_selectShipKey = $(r).find('td:eq(6)').text();
			_laneID = $(r).find('td:eq(8)').text();

			getLane(_laneID);
		});

		$('#search-ship').on('dblclick', 'tbody tr td', function(e) {
			var r = $(this).parent();

			var cid = $(r).find('td:eq(0)').text();
			if (!cid) {
				e.preventDefault();
				return false;
			}

			var yardClosingTime = $(r).find('td:eq(10)').text();

			if (yardClosingTime && (new Date().getTime() > new Date(yardClosingTime).getTime())) {
				$.confirm({
					title: 'Cảnh báo!',
					type: 'orange',
					icon: 'fa fa-warning',
					content: 'Container quá thời gian Closing time, bạn có muốn tiếp tục ?',
					buttons: {
						ok: {
							text: 'Tiếp tục',
							btnClass: 'btn-primary',
							keys: ['Enter'],
							action: function() {
								$('#shipid').val($(r).find('td:eq(0)').text() + "/" + $(r).find('td:eq(3)').text() + "/" + $(r).find('td:eq(4)').text());
								$('#shipid').removeClass('error');

								_selectShipKey = $(r).find('td:eq(6)').text();
								_laneID = $(r).find('td:eq(8)').text();

								getLane(_laneID);
							}
						},
						cancel: {
							text: 'Hủy bỏ',
							btnClass: 'btn-default',
							keys: ['ESC'],
							action: function() {
								$('#ship-modal').modal("show");
							}
						}
					}
				});
			} else {
				$('#shipid').val($(r).find('td:eq(0)').text() + "/" + $(r).find('td:eq(3)').text() + "/" + $(r).find('td:eq(4)').text());
				$('#shipid').removeClass('error');

				_selectShipKey = $(r).find('td:eq(6)').text();
				_laneID = $(r).find('td:eq(8)').text();

				getLane(_laneID);
			}

			$('#ship-modal').modal("hide");
		});

		$('#unselect-ship').on('click', function() {
			$('#shipid').val('');
		});

		$('#reload-ship').on("click", function() {
			$('#search-ship-name').val("");
			search_ship();
		})
		///////// END SEARCH SHIP

		//------APPLY ITEMS FROM MODAL
		$("#tbl-items").find("tbody tr").on("dblclick", function() {
			var applyBtn = $("#apply-items"),
				rIdx = applyBtn.val().split(".")[0],
				cIdx = applyBtn.val().split(".")[1],
				itemID = $(this).find("td:eq(1)").text(),
				cell = tblDetails.find("tbody tr:eq(" + rIdx + ") td:eq(" + cIdx + ")").first(),
				dtTbl = tblDetails.DataTable();

			cell.removeClass("error");
			dtTbl.cell(cell).data(itemID).draw(false);
			$("#items-modal").modal("hide");
		});

		$("#apply-items").on("click", function() {
			var rIdx = $(this).val().split(".")[0],
				cIdx = $(this).val().split(".")[1],
				itemID = $("#tbl-items").getSelectedRows().data().toArray()[0][1],
				cell = tblDetails.find("tbody tr:eq(" + rIdx + ") td:eq(" + cIdx + ")").first(),
				dtTbl = tblDetails.DataTable();

			cell.removeClass("error");
			dtTbl.cell(cell).data(itemID).draw(false);
		});
		//------APPLY ITEMS FROM MODAL

		//------APPLY UNIT FROM MODAL
		$("#tbl-unit").find("tbody tr").on("dblclick", function() {
			var applyBtn = $("#apply-unit"),
				rIdx = applyBtn.val().split(".")[0],
				cIdx = applyBtn.val().split(".")[1],
				unitID = $(this).find("td:eq(1)").text(),
				cell = tblDetails.find("tbody tr:eq(" + rIdx + ") td:eq(" + cIdx + ")").first(),
				dtTbl = tblDetails.DataTable();

			cell.removeClass("error");
			dtTbl.cell(cell).data(unitID).draw(false);
			$("#unit-modal").modal("hide");
		});

		$("#apply-unit").on("click", function() {
			var rIdx = $(this).val().split(".")[0],
				cIdx = $(this).val().split(".")[1],
				unitID = $("#tbl-unit").getSelectedRows().data().toArray()[0][1],
				cell = tblDetails.find("tbody tr:eq(" + rIdx + ") td:eq(" + cIdx + ")").first(),
				dtTbl = tblDetails.DataTable();

			cell.removeClass("error");
			dtTbl.cell(cell).data(unitID).draw(false);
		});
		//------APPLY UNIT FROM MODAL

		$('#ship-modal, #barge-modal, #payer-modal, #items-modal, #unit-modal').on('shown.bs.modal', function(e) {
			$($.fn.dataTable.tables(true)).DataTable()
				.columns
				.adjust();
		});

		//THU SAU
		$('#payment-modal').on('hide.bs.modal', function(e) {
			$('#show-payment-modal').attr("data-target", "");
		});

		$('#payment-type').on('change', function() {
			if ($(this).val() == "M") {
				$('#chk-view-inv').closest('label').show(); //show option tinh cuoc
				$('#show-payment-modal')
					.removeClass('btn-primary')
					.addClass('btn-warning')
					.html('<i class="fa fa-print"></i>&ensp;Thanh toán'); //doi title button

				$('#p-money i').removeClass('fa-square').addClass('fa-check-square');
				$('#p-credit i').removeClass('fa-check-square').addClass('fa-square');
			} else {
				$('#chk-view-cont').trigger('click'); //chuyen qua tab list cont
				$('#chk-view-inv').closest('label').hide(); //an option tinh cuoc
				$('#show-payment-modal')
					.addClass('btn-primary')
					.removeClass('btn-warning')
					.html('<i class="fa fa-save"></i>&ensp;Lưu thu sau'); //doi title button

				$('#p-money i').removeClass('fa-check-square').addClass('fa-square');
				$('#p-credit i').removeClass('fa-square').addClass('fa-check-square');
			}
		});
		//THU SAU

		$('#show-payment-modal').on("click", function(e) {
			if (!$("#taxcode").val() || !$("#cusID").val()) {
				$('#taxcode').addClass("error");
				toastr["warning"]("Chưa chọn đối tượng thanh toán!");
				e.preventDefault();
				return;
			}

			var paymentType = $('#payment-type').val();
			if (paymentType == "M") {

				if (tblInv.DataTable().rows().data().toArray().length == 0) {
					toastr["warning"]("Không có gì để thanh toán!");
					e.preventDefault();
					return;
				}

				$("#dv-cash, #publish-type").removeClass("hiden-input");
				$("#dv-credit").addClass("hiden-input");

				if (!$("input[name='publish-opt']").is(":checked")) {
					$("input[name='publish-opt'][value='e-inv']").prop("checked", true);
					$("#m-inv-container").addClass("hiden-input");
				}
				$(this).attr("data-target", "#payment-modal");

			} else {
				if (tblDetails.DataTable().rows().data().toArray().length == 0) {
					toastr["warning"]("Không có gì để lưu!");
					e.preventDefault();
					return;
				}

				//kiem tra cac truong bat buoc truoc khi luu thu sau
				if ($('.input-required').has_required()) {
					$('.toast').remove();
					toastr['error']('Các trường bắt buộc (*) không được để trống!');
					return;
				}

				var tdrequired = $('#tbl-detail tbody').find('td.input-required');
				if (tdrequired.has_required()) {
					$('.toast').remove();
					toastr['error']('Vui lòng nhập đầy đủ thông tin!');
					return;
				}

				$("#dv-cash, #publish-type").addClass("hiden-input");
				$("#dv-credit").removeClass("hiden-input");
				$("input[name='publish-opt']").prop("checked", false);

				$.confirm({
					title: 'Cảnh báo!',
					type: 'orange',
					icon: 'fa fa-warning',
					content: 'Xác nhận lưu thu sau?',
					buttons: {
						ok: {
							text: 'Xác nhận',
							btnClass: 'btn-warning',
							keys: ['Enter'],
							action: function() {
								$('body').blockUI();
								saveCredit();
							}
						},
						cancel: {
							text: 'Hủy bỏ',
							btnClass: 'btn-default',
							keys: ['ESC']
						}
					}
				});
			}
		});

		$('input[name="view-opt"]').bind('change', function(e) {
			$('.grid-toggle').find('div.table-responsive').toggleClass('grid-hidden');
			$('#tbl-detail').DataTable().columns.adjust();
			$('#tbl-inv').DataTable().columns.adjust();
			if ($('#chk-view-inv').is(':checked') && $('#tbl-inv tbody').find('tr').length <= 1) {
				var tdrequired = $('#tbl-detail tbody').find('td.input-required');
				if (tdrequired.has_required() || $('.input-required').has_required()) {
					$('.toast').remove();
					toastr['error']('Vui lòng nhập đầy đủ thông tin!');
					tblInv.dataTable().fnClearTable();
					$('#chk-view-cont').trigger('click');
					return;
				}

				var newrows = tblDetails.getDataByColumns(_cols);
				_lstOrder = [];
				if (newrows.length == 0) return;

				var failCargoWeight = newrows.filter(p => !p.CargoWeight || parseFloat(p.CargoWeight) == 0 || parseFloat(p.CargoWeight) == NaN).map(x => x.ItemID);
				if (failCargoWeight.length > 0) {
					toastr["error"]("Hàng hóa [" + failCargoWeight.join(", ") + "] chưa nhập trọng lượng!");
					return;
				}
				var failQuantity = newrows.filter(p => !p.Quantity || parseFloat(p.Quantity) == 0 || parseFloat(p.Quantity) == NaN).map(x => x.ItemID);
				if (failQuantity.length > 0) {
					toastr["error"]("Hàng hóa [" + failQuantity.join(", ") + "] chưa nhập số lượng!");
					return;
				}

				newrows.map(p => p.Quantity = parseInt(p.Quantity));
				newrows.map(p => p.CargoWeight = parseFloat(p.CargoWeight));
				newrows.map(p => p.Volume = parseFloat(p.Volume));

				$.each(newrows, function(idx, item) {
					addCntrToEir(item);
				});

				loadpayment();
			}
		});

		tblDetails.on('change', 'tbody tr td input[type="checkbox"]', function(e) {
			var inp = $(e.target);
			if (inp.is(":checked")) {
				inp.attr("checked", "");
				inp.val("1");
			} else {
				inp.removeAttr("checked");
				inp.val("0");
			}

			var crCell = inp.closest('td'),
				crRow = inp.closest('tr');

			tblDetails.DataTable().cell(crCell).data(crCell.html()).draw(false);
		});

		$('#addnew').on('click', function() {
			if ($('.ibox-body .input-required').has_required()) {
				toastr['error']('Các trường bắt buộc (*) không được để trống!');
				return;
			}

			if (_ports.length == 0) {
				$('.toast').remove();
				toastr['error']('Không có cảng nào thuộc lịch trình tàu!');
				return;
			}

			$.confirm({
				columnClass: 'col-md-3 col-md-offset-3',
				titleClass: 'font-size-17',
				title: 'Thêm dòng mới',
				content: '<div class="input-group-icon input-group-icon-left">' +
					'<span class="input-icon input-icon-left"><i class="fa fa-plus" style="color: green"></i></span>' +
					'<input autofocus class="form-control form-control-sm" id="num-row" type="number" placeholder="Nhập số dòng" value="1">' +
					'</div>',
				buttons: {
					ok: {
						text: 'Xác nhận',
						btnClass: 'btn-sm btn-primary btn-confirm',
						keys: ['Enter'],
						action: function() {
							var input = this.$content.find('input#num-row');
							var errorText = this.$content.find('.text-danger');
							if (!input.val().trim()) {
								$.alert({
									title: "Thông báo",
									content: "Vui lòng nhập số dòng!.",
									type: 'red'
								});
								return false;
							} else {
								tblInv.DataTable().clear().draw();
								tblDetails.newRows(input.val());
							}
						}
					},
					later: {
						text: 'Hủy',
						btnClass: 'btn-sm',
						keys: ['ESC']
					}
				}
			});
		});

		$(document).on("keypress", "#num-row", function(e) {
			if (e.which == 13) {
				$(document).find("div.jconfirm-buttons").find("button.btn-confirm").trigger("click");
			}
		});

		// ----- FOR ATTACH SERVICES
		// load_attach_srv();
		$("#chkServiceAttach").on("change", function() {
			var content = $("#col-transfer")[0];

			$("#col-transfer").remove();

			if ($(this).is(":checked")) {
				$("#row-transfer-left").append(content);
			} else {
				$("#row-transfer-right").append(content);
			}

			$("#col-attach-service").toggle(800, function() {
				$($.fn.dataTable.tables(true)).DataTable()
					.columns
					.adjust();
			});

		});

		//setup before functions
		var typingTimer;
		var doneInterval = 500;

		tblDetails.DataTable().on("select deselect", function(e, dt, type, indexes) {
			clearTimeout(typingTimer);
			typingTimer = setTimeout(loadAttachData(indexes), doneInterval);
		});

		tblAttach.on('change', 'tbody tr td input[type="checkbox"]', function(e) {

			var inp = $(e.target);

			var rowcontSelected = tblDetails.DataTable().rows('.selected').data()[0];

			if (!rowcontSelected || rowcontSelected.length == 0 || !rowcontSelected[_cols.indexOf("CntrNo")]) {
				$(".toastr").remove();
				toastr["error"]("Vui lòng chọn ít nhất một container để đính kèm dịch vụ!");

				if (inp.is(":checked")) {
					inp.removeAttr("checked");
					inp.val("");
				} else {
					inp.attr("checked", "");
					inp.val(1);
				}

				tblAttach.DataTable().cell(inp.closest("td")).data(inp.closest("td").html()).draw(false);

				return;
			}

			if (inp.is(":checked")) {
				inp.attr("checked", "");
				inp.val(1);
			} else {
				inp.removeAttr("checked");
				inp.val("");
			}

			if (inp.closest("td").index() == _colsAttachServices.indexOf("Select")) {
				var currentTD = inp.closest("td");

				var selectedConts = tblDetails.DataTable()
					.rows('.selected')
					.data().toArray()
					.map(x => x[_cols.indexOf("CntrNo")]);

				var currentCjMode = inp.closest("tr").find("td:eq(" + _colsAttachServices.indexOf("CjMode_CD") + ")").text();

				if (_attachServicesChecker.length > 0) {
					var contHasThisServices = _attachServicesChecker.filter(p => selectedConts.indexOf(p.CntrNo) != -1 && p.CJMode_CD == currentCjMode)
						.map(x => x.CntrNo);

					_attachServicesChecker.filter(p => contHasThisServices.indexOf(p.CntrNo) != -1 && p.CJMode_CD == currentCjMode)
						.map(x => x.Select = (inp.is(":checked") ? 1 : 0));

					var contNonService = selectedConts.filter(p => contHasThisServices.indexOf(p) == -1);
					$.each(contNonService, function(idx, iContNo) {
						_attachServicesChecker.push({
							Select: inp.is(":checked") ? 1 : 0,
							CntrNo: iContNo,
							CJMode_CD: currentCjMode
						});
					});
				} else {
					$.each(selectedConts, function(idx, iContNo) {
						_attachServicesChecker.push({
							Select: inp.is(":checked") ? 1 : 0,
							CntrNo: iContNo,
							CJMode_CD: currentCjMode
						});
					});
				}

				//thay đổi số lượng chọn khi check/uncheck
				var plusOrSubtract = inp.is(":checked") ? 1 : -1;

				var oldNumCell = currentTD.closest("tr").find("td:eq(" + _colsAttachServices.indexOf("Cont_Count") + ")");
				var oldNum = tblAttach.DataTable().cell(oldNumCell).data();
				var newNum = (oldNum ? parseInt(oldNum) : 0) + (selectedConts.length * plusOrSubtract);

				tblAttach.DataTable().cell(oldNumCell).data(newNum > 0 ? newNum : "");

				if ($('#chk-view-inv').is(':checked')) {
					loadpayment();
				} else {
					$('#tbl-inv').dataTable().fnClearTable();
				}
			}

			var crCell = inp.closest('td');
			var crRow = inp.closest('tr');
			var eTable = tblAttach.DataTable();

			eTable.cell(crCell).data(crCell.html()).draw(false);
			eTable.row(crRow).nodes().to$().addClass("editing");
		});
		// ----- FOR ATTACH SERVICES

		$('#remove').on('click', function() {
			if ($('#chk-view-inv').is(':checked')) return;

			if (tblDetails.DataTable().rows().count() == 0) {
				return;
			}

			if (tblDetails.DataTable().rows('.selected').count() == 0) {
				toastr["error"]("Chọn ít nhất 1 dòng dữ liệu để xoá!");
				return;
			}

			$.confirm({
				title: 'Thông báo!',
				type: 'orange',
				icon: 'fa fa-warning',
				content: 'Các dòng dữ liệu được chọn sẽ được xóa?',
				buttons: {
					ok: {
						text: 'Chấp nhận',
						btnClass: 'btn-warning',
						keys: ['Enter'],
						action: function() {
							//remove all row to recalculate
							tblDetails.DataTable().rows('.selected').remove().draw(false);
							tblDetails.updateSTT();
							tblInv.DataTable().clear().draw();
						}
					},
					cancel: {
						text: 'Hủy bỏ',
						btnClass: 'btn-default',
						keys: ['ESC']
					}
				}
			});
		});

		tblDetails.on('change', 'td', function(e) {
			var colidx = $(this).index();

			if (colidx == _cols.indexOf("POD") || colidx == _cols.indexOf("FPOD")) {
				onChangePort($(e.target));
			}

			var ridx = $(this).closest('tr').index();
			if (_lstOrder.length > 0) {
				_lstOrder[ridx][_cols[colidx]] = $(this).text();
				_lstOrder = mapDataAgain(_lstOrder);
			}
		})

		$(document).on('change', 'input, select', function(e) {
			changed(e);
		});

		$("#save-payer").on("click", function() {
			var addTaxCode = $("#add-payer-taxcode").val().trim();
			var addPayerName = $("#add-payer-name").val().trim();
			var address = $("#add-payer-address").val().trim();

			if (!addTaxCode) {
				$("#add-payer-taxcode").addClass("error");
				$(".toast").remove();
				toastr["error"]("Vui lòng nhập thông tin [Mã số thuế]!");
				return;
			}

			var checkTaxCode = addTaxCode;
			checkTaxCode = checkTaxCode.replace("-", "");

			if ([10, 13].indexOf(checkTaxCode.length) == "-1" || isNaN(checkTaxCode)) {
				$("#add-payer-taxcode").addClass("error");
				$(".toast").remove();
				toastr["error"]("Vui lòng nhập đúng định dạng [Mã số thuế]!");
				return;
			}

			if (!addPayerName) {
				$("#add-payer-name").addClass("error");
				$(".toast").remove();
				toastr["error"]("Vui lòng nhập thông tin [Tên]!");
				return;
			}

			var formData = {
				'taxCode': addTaxCode,
				'cusName': addPayerName,
				'address': address
			};

			save_new_payer(formData);
		});

		$('#pay-atm').on('click', function() {
			var failedQuantity = _lstOrder.filter(p => !p.Quantity || parseFloat(p.CargoWeight) == 0 || parseFloat(p.Quantity) == NaN);
			if (failedQuantity.length > 0) {
				toastr["error"]("Nhập đúng số lượng [" + failedQuantity.map(p => p.ItemID).join(", ") + "]");
				return;
			}

			var failCargoWeight = _lstOrder.filter(p => !p.CargoWeight || parseFloat(p.CargoWeight) == 0 || parseFloat(p.CargoWeight) == NaN);
			if (failCargoWeight.length > 0) {
				toastr["error"]("Nhập đúng trọng lượng [" + failCargoWeight.map(p => p.ItemID).join(", ") + "]");
				return;
			}

			if ($("input[name='publish-opt']:checked").val() == "e-inv") {
				publishInv();
			} else {
				saveData();
			}
		});

		$('#save-credit').on("click", function() {
			//kiem tra cac truong bat buoc truoc khi luu thu sau
			if ($('.input-required').has_required()) {
				$('.toast').remove();
				toastr['error']('Các trường bắt buộc (*) không được để trống!');
				return;
			}

			var tdrequired = $('#tbl-detail tbody').find('td.input-required');
			if (tdrequired.has_required()) {
				$('.toast').remove();
				toastr['error']('Vui lòng nhập đầy đủ thông tin!');
				return;
			}

			saveCredit();
		});

		function saveCredit() {
			var newrows = tblDetails.getDataByColumns(_cols);
			_lstOrder = [];
			if (newrows.length == 0) {
				return;
			}

			var failedQuantity = newrows.filter(p => !p.Quantity || parseFloat(p.Quantity) == 0 || parseFloat(p.Quantity) == NaN).map(x => x.ItemID);
			if (failedQuantity.length > 0) {
				toastr["error"]("Container [" + failedQuantity.join(", ") + "] chưa nhập số lượng!");
				return;
			}

			var failCargoWeight = newrows.filter(p => !p.CargoWeight || parseFloat(p.CargoWeight) == 0 || parseFloat(p.CargoWeight) == NaN).map(x => x.CntrNo);
			if (failCargoWeight.length > 0) {
				toastr["error"]("Container [" + failCargoWeight.join(", ") + "] chưa nhập trọng lượng!");
				return;
			}

			$.each(newrows, function(idx, item) {
				addCntrToEir(item);
			});

			saveData();
		}

		function search_barge() {
			$("#search-barge").waitingLoad();
			var formdata = {
				'action': 'view',
				'act': 'search_barge'
			};

			$.ajax({
				url: "/Order/ordReceive/get-barge",
				dataType: 'json',
				data: formdata,
				type: 'POST',
				success: function(data) {
					var rows = [];
					if (data.barges.length > 0) {
						for (i = 0; i < data.barges.length; i++) {
							rows.push([
								(i + 1), data.barges[i].VesselID, data.barges[i].VesselName, data.barges[i].InboundVoyage, data.barges[i].OutboundVoyage
							]);
						}
						$('#search-barge').DataTable({
							paging: false,
							searching: false,
							infor: false,
							scrollY: '25vh',
							data: rows
						});
					}
				},
				error: function(err) {
					console.log(err);
				}
			});
		}

		function getLane(laneID) {
			$('.ibox.collapsible-box').blockUI();
			var formdata = {
				'action': 'view',
				'laneID': laneID
			};
			_ports.length = 0;
			$.ajax({
				url: "/Order/ordReceive/get-lane",
				dataType: 'json',
				data: formdata,
				type: 'POST',
				success: function(res) {
					if (res.data && res.data.length > 0) {
						let strPort = res.data[0].PortList;
						_ports = strPort ? strPort.split(",").map(p => ({
							PortCode: String(p).trim(),
							PortName: String(p).trim()
						})) : [];
					}
					extendSelectOnGrid();

					$('.ibox.collapsible-box').unblock();
				},
				error: function(err) {
					console.log(err);
				}
			});
		}

		function extendSelectOnGrid() {

			//------SET AUTOCOMPLETE
			var tblDetailsHeader = tblDetails.parent().prev().find('table');

			tblDetailsHeader.find(' th:eq(' + _cols.indexOf('ItemID') + ') ').setSelectSource(_itemList.map(p => p.ItemID));
			tblDetailsHeader.find(' th:eq(' + _cols.indexOf('IsLocal') + ') ').setSelectSource(_localForeign.map(p => p.Name));
			tblDetailsHeader.find(' th:eq(' + _cols.indexOf('POD') + ') ').setSelectSource(_ports.map(p => p.PortCode));
			tblDetailsHeader.find(' th:eq(' + _cols.indexOf('FPOD') + ') ').setSelectSource(_ports.map(p => p.PortCode));
			tblDetailsHeader.find(' th:eq(' + _cols.indexOf('UnitID') + ') ').setSelectSource(_units.map(p => p.UnitID));
			tblDetailsHeader.find(' th:eq(' + _cols.indexOf('TransitID') + ') ').setSelectSource(_transits.map(p => p.TransitID));
			//------SET AUTOCOMPLETE

			//------SET MORE BUTTON FOR COLUMNS
			tblDetails.moreButton({
				columns: _cols.getIndexs(["ItemID", "UnitID"]),
				onShow: function(cell) {
					var cellIdx = cell.parent().index();
					$("#apply-items").val(cellIdx + "." + _cols.indexOf("ItemID"));
					$("#apply-unit").val(cellIdx + "." + _cols.indexOf("UnitID"));
				}
			});
			//------SET MORE BUTTON FOR COLUMNS

			//------SET DROPDOWN BUTTON FOR COLUMN
			tblDetails.columnDropdownButton({
				data: [{
						colIndex: _cols.indexOf("IsLocal"),
						source: _localForeign
					},
					{
						colIndex: _cols.indexOf("ItemID"),
						source: _itemList
					},
					{
						colIndex: _cols.indexOf("POD"),
						source: _ports
					},
					{
						colIndex: _cols.indexOf("FPOD"),
						source: _ports
					},
					{
						colIndex: _cols.indexOf("TransitID"),
						source: _transits.map(p => p.TransitName)
					},
				],
				onSelected: function(cell, itemSelected) {
					// var temp = "<input type='text' value='"+ itemSelected.attr("code") +"' class='hiden-input'>" + itemSelected.text();
					tblDetails.DataTable().cell(cell).data(itemSelected.text()).draw(false);
					tblDetails.DataTable().cell(cell.parent().index(), cell.next()).focus();
				}
			});
			//------SET DROPDOWN BUTTON FOR COLUMN

			tblDetails.editableTableWidget();
		}

		function onChangePort(cell) {
			var portId = cell.text(),
				dtC = tblDetails.DataTable();

			if (!portId) {
				dtC.cell(cell).data("");
				return;
			}

			var portRealCode = _ports.filter(p => p.PortName.toUpperCase() == portId.toUpperCase()).map(x => x.PortCode)[0];
			if (!portRealCode) {
				$(".toast").remove();
				toastr["error"]("Cảng [đích/dỡ] không hợp lệ! Vui lòng chọn lại");
				dtC.cell(cell).data("");
				dtC.cell(cell).focus();
			} else {
				dtC.cell(cell).data(portRealCode);
			}
		}

		function eir_base(item) {
			item['VoyageKey'] = _selectShipKey;
			item['ClassID'] = $('#class-id').val(); //*
			item['JobModeID'] = $('#class-id option:checked').attr("cjmode");
			item['MethodID'] = $('input[name="chkSalan"]').is(':checked') ? $('#class-id option:checked').attr("dmethod-salan") :
				$('#class-id option:checked').attr("dmethod");
			item['IssueDate'] = $('#ref-date').val(); //*
			item['ShipperName'] = $('#shipper-name').val(); //*
			item['CusTypeID'] = getPayerType($('#cusID').val());
			item['CusID'] = $('#cusID').val(); //*
			if ($('#mail').val()) {
				item['Email'] = $('#mail').val();
			}
			item['PaymentTypeID'] = $('#payment-type').val();
			item['Remark'] = $('#remark').val().replace(/'|"/g, "");
		}

		function addCntrToEir(row) {
			var item = {};
			eir_base(item);
			for (var i = 1; i <= _cols.length - 1; i++) {
				if (i == _cols.indexOf("ItemID")) {
					item['ItemID'] = row['ItemID'];
					item['CommodityDescription'] = _itemList.filter(p => p.ItemID == row['ItemID']).map(p => p.ItemName)[0] || null;
				} else if (i == _cols.indexOf("Quantity")) {
					item['Quantity'] = !isNaN(parseInt(row.Quantity)) ? parseInt(row.Quantity) : 0;
				} else if (i == _cols.indexOf("CargoWeight")) {
					item['CargoWeight'] = !isNaN(parseFloat(row.CargoWeight)) ? parseFloat(row.CargoWeight) : 0;
				} else if (i == _cols.indexOf("Volume")) {
					item['Volume'] = !isNaN(parseFloat(row.Volume)) ? parseFloat(row.Volume) : 0;
				} else {
					item[_cols[i]] = row[_cols[i]];
				}
			}

			_lstOrder.push(item);
			_lstOrder = mapDataAgain(_lstOrder);
		}

		//------FUNCTION
		function mapDataAgain(data) {
			$.each(data, function() {
				if (_itemList.filter(p => p.ItemID == this["ItemID"]).length == 0 && this["ItemID"]) {
					this["ItemID"] = _itemList.filter(p => p.ItemName.toUpperCase() == this["ItemID"].toUpperCase())
						.map(x => x.ItemID)[0] || null;
				}

				if (_transits.filter(p => p.TransitID == this["TransitID"]).length == 0 && this["TransitID"]) {
					this["TransitID"] = _transits.filter(p => p.TransitName.toUpperCase() == this["TransitID"].toUpperCase())
						.map(x => x.TransitID)[0] || null;
				}

				if (_localForeign.filter(p => p.Code == this["IsLocal"]).length == 0 && this["IsLocal"]) {
					var lc = _localForeign.filter(p => p.Name.toUpperCase() == this["IsLocal"].toUpperCase()).map(x => x.Code)[0];
					this["IsLocal"] = lc ? lc : null;
				}

				if (_ports.filter(p => p.PortCode == this["POD"]).length == 0 && this["POD"]) {
					var pod = _ports.filter(p => p.PortName.toUpperCase() == this["POD"].toUpperCase()).map(x => x.PortCode)[0];
					this["POD"] = pod || null;
				}

				if (_ports.filter(p => p.PortCode == this["FPOD"]).length == 0 && this["FPOD"]) {
					var fpod = _ports.filter(p => p.PortName.toUpperCase() == this["FPOD"].toUpperCase()).map(x => x.PortCode)[0];
					this["FPOD"] = fpod || null;
				}
			});

			return data;
		}

		function loadpayment() {
			if (_lstOrder.length == 0) {
				tblInv.dataTable().fnClearTable();
				return;
			}
			if ($('.input-required.error').length > 0) {
				tblInv.dataTable().fnClearTable();
				return;
			}
			if ($('.input-required').has_required()) {
				tblInv.dataTable().fnClearTable();
				$('.toast').remove();
				toastr['error']('Các trường bắt buộc (*) không được để trống!');
				return;
			}

			$('#tbl-inv').waitingLoad();
			var formdata = {
				'action': 'view',
				'act': 'load_payment',
				'cusID': $('#cusID').val(),
				'list': JSON.stringify(_lstOrder)
			};

			if ($("#chkServiceAttach").is(":checked")) {
				addCntrToAttachSRV();

				var nonAttach = _lstAttachService.filter(p => p.CJMode_CD != "SDD" && p.CJMode_CD != "LBC");

				if (nonAttach && nonAttach.length > 0) {
					formdata['nonAttach'] = JSON.stringify(nonAttach);
				}
			}

			$.ajax({
				url: "/Order/ordReceive/load-payment",
				dataType: 'json',
				data: formdata,
				type: 'POST',
				success: function(data) {
					if (data.deny) {
						toastr["error"](data.deny);
						tblInv.dataTable().fnClearTable();
						return;
					}

					if (data.no_payer) {
						$(".toast").remove();
						toastr["error"](data.no_payer);

						tblInv.dataTable().fnClearTable();
						return;
					}

					if (data.no_tariff_end) {
						$(".toast").remove();
						toastr["error"](data.no_tariff_end);
						tblInv.dataTable().fnClearTable();
						return;
					}

					if (data.no_tariff) {
						$(".toast").remove();
						toastr["warning"](data.no_tariff);
						tblInv.dataTable().fnClearTable();
					}

					if (!data.results || data.results.length == 0) {
						toastr["warning"]("Không tìm thấy biểu cước phù hợp! Vui lòng kiểm tra lại!");
						tblInv.dataTable().fnClearTable();
						return;
					}

					if (data.error && data.error.length > 0) {
						$.each(data.error, function() {
							toastr["warning"](this);
						});
						tblInv.dataTable().fnClearTable();
						return;
					}

					var rows = [],
						lst = data.results,
						stt = 1;
					for (i = 0; i < lst.length; i++) {
						rows.push([
							(stt++), lst[i].DraftInvoice, lst[i].OrderNo ? lst[i].OrderNo : "", lst[i].TariffCode, lst[i].TariffDescription, lst[i].Unit, lst[i].JobMode == 'GO' ? "Nâng container" : "Hạ container", lst[i].DeliveryMethod, lst[i].Cargotype, lst[i].ISO_SZTP, lst[i].FE, lst[i].IsLocal, lst[i].Quantity, lst[i].StandardTariff, 0, lst[i].DiscountTariff, lst[i].DiscountedTariff, lst[i].Amount, lst[i].VatRate, lst[i].VATAmount, lst[i].SubAmount, lst[i].Currency, lst[i].IX_CD, lst[i].CNTR_JOB_TYPE, lst[i].VAT_CHK, lst[i].Remark || "", lst[i].TRF_DESC_MORE || ""
						]);
					}

					if (rows.length > 0) {
						var n = rows.length;
						rows.push([
							n, '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', data.SUM_AMT, '', data.SUM_VAT_AMT, data.SUM_SUB_AMT, '', '', '', '', '', ''
						]);
						$('#AMOUNT').text($.formatNumber(data.SUM_AMT, {
							format: "#,###",
							locale: "us"
						}));
						$('#DIS_AMT').text($.formatNumber(data.SUM_DIS_AMT, {
							format: "#,###",
							locale: "us"
						}));
						$('#VAT').text($.formatNumber(data.SUM_VAT_AMT, {
							format: "#,###",
							locale: "us"
						}));
						$('#TAMOUNT').text($.formatNumber(data.SUM_SUB_AMT, {
							format: "#,###",
							locale: "us"
						}));
					}

					tblInv.dataTable().fnClearTable();
					if (rows.length > 0) {
						tblInv.dataTable().fnAddData(rows);
					}
				},
				error: function(err) {
					$(".toast").remove();
					toastr["error"]("ERROR!");
					tblInv.dataTable().fnClearTable();
					console.log(err);
				}
			});
		}

		function getPayerType(id) {
			if (payers.length == 0) return "";
			var py = payers.filter(p => p.CusID == id);
			if (py.length == 0) return "";
			return py[0].CusTypeID || "";
		}

		///////// INPUT TAX_CODE DIRECTLY
		$("#taxcode").on("keypress", function(e) {
			if (e.keyCode == 13) {
				$(e.target).trigger('change');
			}
		});
		///////// INPUT TAX_CODE DIRECTLY

		var typingTimer;

		function changed(e) {
			var cr = e.target;

			switch ($(cr).attr("id")) {
				case "cntrAdd-Temperature":
					var n = $(cr).val().replace(/[^0-9-.]/g, '');
					$(cr).val(n.length >= 4 ? n.substr(0, 4) : n);
					break;
				case "cntrAdd-Vent":
				case "cntrAdd-OOG_TOP":
				case "cntrAdd-OOG_LEFT":
				case "cntrAdd-OOG_RIGHT":
				case "cntrAdd-OOG_BACK":
				case "cntrAdd-OOG_FRONT":
					var n = $(cr).val().replace(/[^0-9.]/g, '');
					$(cr).val(n);
					break;
				case "cntrAdd-CLASS":
					var n = $(cr).val().replace(/[^0-9\.]/g, '');
					$(cr).val(n.length >= 4 ? n.substr(0, 3) : n);
					break;
				case "cntrAdd-UNNO":
					var n = $(cr).val().replace(/[^0-9.]/g, '');
					$(cr).val(n.length >= 5 ? n.substr(0, 4) : n);
					break;
				case "taxcode":
					var taxcode = $(cr).val();
					if (!taxcode) {
						clearPayer();
						return;
					}

					var cusID = "";
					var ccc = $("#cusID").val();

					if (payers.length == 0 && !ccc) {
						findPayer(taxcode);
						return;
					}
					var tempSearchCus = payers.filter(p => !p["TaxCode"] && p.TaxCode.toString().includes(taxcode));
					if (ccc) {
						cusID = ccc;
					} else {
						if (tempSearchCus.length == 0) {
							$(".toast").remove();
							toastr.options.timeOut = "10000";
							toastr["warning"]("Đối tượng thanh toán này không tồn tại trong hệ thống! <br/> Vui lòng Thêm mới/ Chọn đối tượng khác!");
							toastr.options.timeOut = "5000";
							return;
						} else if (tempSearchCus.length > 1) {
							clearPayer();
							$('#search-payer').DataTable().search(taxcode).draw(false)
							$('#payer-modal').modal("show");
							return;
						}
						cusID = tempSearchCus[0].CusID;
					}

					$("#cusID").val(cusID);

					var checkPayerInput = fillPayer();
					if (!checkPayerInput) {
						clearPayer();

						$(".toast").remove();
						toastr.options.timeOut = "10000";
						toastr["warning"]("Đối tượng thanh toán này không tồn tại trong hệ thống! <br/> Vui lòng Thêm mới/ Chọn đối tượng khác!");
						toastr.options.timeOut = "5000";
						return;
					}

					clearTimeout(typingTimer);
					break;
				default:
					var n = "";
					break;
			}

			if ($(cr).val()) {
				$(cr).removeClass('error');
				$(cr).parent().removeClass('error');
			}

			if (_lstOrder.length > 0) {
				if ($(cr).attr('id') == "class-id") {
					$.each(_lstOrder, function(idx, item) {
						if ($(cr).val() == 3) {
							delete item['BLNo'];
						} else {
							item['BLNo'] = item['BookingNo'];
						}
					});
				}

				$.each(_lstOrder, function(idx, item) {
					eir_base(item);
				});
			}

			typingTimer = window.setTimeout(function() {
				//reset list eir
				if ($('.input-required.error').length == 0 &&
					($(cr).attr('id') == "taxcode" || $(cr).attr('id') == "class-id" || $(cr).attr('id') == 'barge-info') &&
					($(cr).val() || $(cr).attr('id') == 'barge-info') &&
					$('#chk-view-inv').is(':checked')) {
					loadpayment();
				}
			}, 1000);
		}

		$("#cmnd, #personal-name, #mail").on('input', function(e) {
			$(e.target).attr('user-input', $(e.target).val() ? 1 : 0);
		});

		function fillPayer() {
			var py = payers.filter(p => p.TaxCode == $('#taxcode').val() && p.CusID == $("#cusID").val());
			if (py.length > 0) { //fa-check-square
				$('#p-taxcode').text($('#taxcode').val());
				$('#payer-name, #p-payername').text(py[0].CusName);
				$('#payer-addr, #p-payer-addr').text(py[0].Address);
				$('#payment-type').val(py[0].PaymentTypeID).selectpicker('refresh').trigger('change');
				if (py[0].PaymentTypeID == "M") {
					$('#p-money i').removeClass('fa-square').addClass('fa-check-square');
					$('#p-credit i').removeClass('fa-check-square').addClass('fa-square');
				} else {
					$('#p-money i').removeClass('fa-check-square').addClass('fa-square');
					$('#p-credit i').removeClass('fa-square').addClass('fa-check-square');
				}

				$("#cmnd[user-input=0]").val(py[0].PersonalID);
				$("#personal-name[user-input=0]").val(py[0].NameDD);
				if (py[0].Email) {
					$("#mail[user-input=0]").val(py[0].Email);
				}

				if (py[0].EMAIL_DD && py[0].EMAIL_DD != py[0].Email) {
					$("#mail").val($("#mail").val() + ',' + py[0].EMAIL_DD);
				}

				$("#taxcode").removeClass("error");
			}

			return py.length > 0;
		}

		function clearPayer() {
			$("#cusID").val('');
			$('#taxcode').val('');

			$("#payer-name").text(" [Tên đối tượng thanh toán]");
			$("#payer-addr").text(" [Địa chỉ]");
			$("#payment-type").val('M').selectpicker('refresh').trigger('change');

			$('#p-taxcode, #p-payername, #p-payer-addr').text('');
		}

		function findPayer(str) {
			$('#taxcode').parent().blockUI();
			$.ajax({
				url: "/Order/ordReceive/search-cus-by-tax",
				dataType: 'json',
				data: {
					action: 'view',
					taxCode: str
				},
				type: 'POST',
				success: function(data) {
					$('#taxcode').parent().unblock();
					if (data.deny) {
						$('#payment-modal').find('.modal-content').unblock();
						toastr["error"](data.deny);
						return;
					}

					if (data.error) {
						$(".toast").remove();
						toastr["error"](data.error);
						return;
					}

					if (!data['cus']) {
						$(".toast").remove();
						toastr["error"]('Mã số thuế này không tồn tại trong hệ thống! Vui lòng nhập lại hoặc tạo mới');
						return;
					}

					if (payers.length == 0) {
						payers.push(data.cus);
					}

					$('#taxcode').val(data.cus.TaxCode);
					$('#cusID').val(data.cus.CusID);
					$('#taxcode').trigger('change');

				},
				error: function(err) {
					$('#taxcode').parent().unblock();
					$(".toast").remove();
					toastr["error"]('Xảy ra lỗi');
					console.log(err);
				}
			});
		}

		//PUBLISH INV
		function publishInv() {
			$('#payment-modal').find('.modal-content').blockUI();
			var datas = getInvDraftDetail();
			var formData = {
				cusTaxCode: $('#p-taxcode').text(),
				cusAddr: $('#p-payer-addr').text(),
				cusName: $('#p-payername').text(),
				sum_amount: $('#AMOUNT').text(),
				vat_amount: $('#VAT').text(),
				total_amount: $('#TAMOUNT').text(),
				datas: datas
			};

			$.ajax({
				url: "/invoiceManage/publish",
				dataType: 'json',
				data: formData,
				type: 'POST',
				success: function(data) {

					if (data.error) {
						$(".toast").remove();
						toastr["error"](data.error);
						return;
					}

					saveData(data);
				},
				error: function(err) {
					$('#payment-modal').find('.modal-content').unblock();
					console.log(err);
				}
			});
		}

		//SAVE DATA
		function saveData(invInfo) {
			// var drDetail = getInvDraftDetail();
			// var drTotal = {};
			// $.each($('#INV_DRAFT_TOTAL').find('span'), function(idx, item) {
			// 	drTotal[$(item).attr('id')] = $(item).text();
			// });

			var publish_opt_checked = $("input[name='publish-opt']:checked").val();
			var formData = {
				'action': 'save',
				'pubType': publish_opt_checked ? publish_opt_checked : "credit",
				'datas': _lstOrder
				// 'draft_detail': drDetail,
				// 'draft_total': drTotal
			};

			if (formData.pubType != 'credit' && (!drDetail || drDetail.length == 0)) {
				$('.toast').remove();
				toastr['warning']('Chưa có thông tin tính cước!');
				return;
			}

			//get attach service for save
			if (_lstAttachService.length > 0) {
				formData['odr'] = _lstAttachService; //JSON.stringify();
			}
			//get attach service for save

			if (typeof invInfo !== "undefined" && invInfo !== null) {
				formData["invInfo"] = invInfo;
			} else {
				//trg hop không phải xuất hóa đơn điện tử, block popup thanh toán ở đây
				$('#payment-modal').find('.modal-content').blockUI();
			}

			$.ajax({
				url: "/Order/ordReceive/save",
				dataType: 'json',
				data: formData,
				type: 'POST',
				success: function(response) {
					if (response.error) {
						return toastr.error(response.error);
					}
					if (!response.data || !response.data.PinCode) {
						return toastr.error('Lỗi phát sinh khi thực hiện thao tác');
					}
					$.confirm({
						title: 'Tạo lệnh thành công !',
						type: 'orange',
						icon: 'fa fa-warning',
						content: `
							<table style="width: 100%" border="0" cellpadding="5">
								<tbody>									
										<tr>
											<td colspan=2 align=center>
												<img src="/Order/ordDelivery/qrcode/${response.data.PinCode}">
											</td>
										</tr>
									
									<tr>
										<td>PinCode : </td>
										<td>${response.data.PinCode}</td>
									</tr>
									
									<tr>
										<td>Số lệnh : </td>
										<td>${response.data.EirNo}</td>
									</tr>									
								</tbody>
							</table>
							`,
						buttons: {
							ok: {
								text: 'Làm lệnh mới',
								btnClass: 'btn-warning',
								keys: ['Enter'],
								action: function() {
									location.reload(true)
								}
							},
							// cancel: {
							// 	text: 'Làm lệnh mới',
							// 	btnClass: 'btn-default',
							// 	keys: ['ESC'],
							// 	action: function () {
							// 		location.reload()
							// 	}
							// }
						}
					});
					toastr.success('Lưu thành công');
				},
				error: function(xhr, status, error) {
					console.log(xhr);
					$('.toast').remove();
					$('#payment-modal').find('.modal-content').unblock();
					toastr['error']("Internal Error!");
				}
			});
		}

		function getInvDraftDetail() {
			var rows = [];
			$('#tbl-inv').find('tbody tr:not(.row-total)').each(function() {
				var nrows = [];
				var ntds = $(this).find('td:not(.dataTables_empty)');
				if (ntds.length > 0) {
					ntds.each(function(td) {
						nrows.push($(this).text() == "null" ? "" : $(this).text());
					});
					rows.push(nrows);
				}
			});

			var drd = [];
			if (rows.length == 0) return;
			$.each(rows, function(idx, item) {
				var temp = {};
				for (var i = 1; i <= _colsPayment.length - 1; i++) {
					temp[_colsPayment[i]] = item[i];
				}
				// temp['Remark'] = $.unique(_lstOrder.map(p => p.CntrNo)).toString();
				drd.push(temp);
			});
			return drd;
		}

		function load_payer() {
			var tblPayer = $('#search-payer');
			tblPayer.waitingLoad();

			$.ajax({
				url: "/Order/ordReceive/get-payer",
				dataType: 'json',
				type: 'POST',
				success: function(data) {
					var rows = [];

					if (data.payers && data.payers.length > 0) {
						payers = data.payers;

						var i = 0;
						$.each(payers, function(index, rData) {
							var r = [];
							$.each(_colPayer, function(idx, colname) {
								var val = "";
								switch (colname) {
									case "STT":
										val = i + 1;
										break;
									case "PaymentTypeID":
										val = !rData[colname] ? "" : (rData[colname] == "M" ? "Thu ngay" : "Thu sau");
										break;
									default:
										val = rData[colname] ? rData[colname] : "";
										break;
								}
								r.push(val);
							});
							i++;
							rows.push(r);
						});
					}

					tblPayer.dataTable().fnClearTable();
					if (rows.length > 0) {
						tblPayer.dataTable().fnAddData(rows);
					}
				},
				error: function(err) {
					tblPayer.dataTable().fnClearTable();
					console.log(err);
					toastr["error"]("Có lỗi xảy ra! Vui lòng liên hệ với kỹ thuật viên! <br/>Cảm ơn!");
				}
			});
		};

		function addCntrToAttachSRV() {
			_lstAttachService = [];
			var attachSrvSelected = _attachServicesChecker.filter(p => p.Select == 1);

			if (attachSrvSelected.length > 0) {
				$.each(attachSrvSelected, function(index, elem) {
					var finds = _lstOrder.filter(p => p.ItemID == elem["ItemID"] && p.BookingNo == elem['BookingNo'])[0];
					var item = $.extend({}, finds);
					_lstAttachService.push(item);
				});
			}
		}

		function deleteItemInArray(item, arrColName) {
			$.each(arrColName, function(idx, colname) {
				delete item[colname];
			});
		}

		function load_attach_srv() {
			$('#col-attach-service').blockUI();
			$("#tb-attach-srv").waitingLoad();
			var formdata = {
				'action': 'view',
				'order_type': $("#class-id option:selected").attr("cjmode")
			};

			$.ajax({
				url: "/Order/ordReceive/load-attach-service",
				dataType: 'json',
				data: formdata,
				type: 'POST',
				success: function(data) {
					$('#col-attach-service').unblock();

					var rows = [];
					if (data.lists && data.lists.length > 0) {
						for (i = 0; i < data.lists.length; i++) {
							var r = [];

							$.each(_colsAttachServices, function(indx, colname) {
								if (colname == "Select") {
									var xxx = '<label class="checkbox checkbox-primary"><input type="checkbox" value="0"><span class="input-span"></span></label>';
									r.push(xxx);
								} else if (colname == "Checker") {
									r.push(0);
								} else {
									r.push(data.lists[i][colname] ? data.lists[i][colname] : "");
								}
							});
							rows.push(r);
						}
					}

					tblAttach.dataTable().fnClearTable();
					if (rows.length > 0) {
						tblAttach.dataTable().fnAddData(rows);
					}

				},
				error: function(err) {
					$('#col-attach-service').unblock();
					console.log(err);
				}
			});
		}

		function loadAttachData(rowIndexes) {

			var cellCheked = tblAttach.find("tbody tr")
				.find('input[type="checkbox"]:checked').closest("td");

			$.each(cellCheked, function(idx, cell) {
				tblAttach.DataTable().cell(cell).data('<label class="checkbox checkbox-primary"><input type="checkbox" value="0"><span class="input-span"></span></label>');
			});

			tblAttach.DataTable().draw(false);

			if (!rowIndexes || rowIndexes.length == 0) {
				return;
			}

			var allCntrNoSelected = tblDetails.DataTable().rows(rowIndexes).data().toArray().map(p => p[_cols.indexOf("CntrNo")]);

			if (_attachServicesChecker.length > 0) {
				// var indexCells = [];
				$.each(tblAttach.find("tbody tr"), function() {
					var cjmode = $(this).find("td:eq(" + _colsAttachServices.indexOf("CjMode_CD") + ")").text();

					var itemChecked = _attachServicesChecker.filter(p => allCntrNoSelected.indexOf(p.CntrNo) != -1 && p.CJMode_CD == cjmode);
					if (itemChecked && itemChecked.length == allCntrNoSelected.length) {
						var cellSelect = $(this).find('td:eq(' + _colsAttachServices.indexOf("Select") + ')');

						cellSelect.find('input[type="checkbox"]')
							.val(itemChecked[0].Select)
							.prop('checked', itemChecked[0].Select == 1 ? true : false);

						// indexCells.push( cellSelect.index() );
					}
				});
			}
		}

		function save_new_payer(formData) {
			$(".add-payer-container").blockUI();
			$.ajax({
				url: "/Order/ordReceive/save-new-payer",
				dataType: 'json',
				data: formData,
				type: 'POST',
				success: function(data) {

					$(".add-payer-container").unblock();

					if (data.deny) {
						toastr["error"](data.deny);
						return;
					}

					if (data.error) {
						toastr["error"](data.error);
						return;
					}

					var tblPayer = $('#search-payer');
					$(".add-payer-container").find("input").val("");

					var dtTblPayer = tblPayer.DataTable();
					if (data.saveType == "add") {
						toastr["success"]("Thêm mới thành công!");

						var rowcount = dtTblPayer.rows().count();
						var row = [
							rowcount + 1, formData.taxCode, formData.taxCode, formData.cusName, formData.address, 'Thu ngay'
						];

						tblPayer.dataTable().fnAddData(row);

						dtTblPayer.page("last").draw("page");

						var lastRow = dtTblPayer.row(':last', {
							order: 'applied'
						});

						dtTblPayer.rows('.m-row-selected').nodes().to$().removeClass("m-row-selected");

						$(lastRow.node()).addClass("m-row-selected");

						dtTblPayer.search(formData.taxCode).draw(false);

						payers.push({
							Address: formData.address,
							CusTypeID: 'CNS', //owner
							CusID: formData.taxCode,
							CusName: formData.cusName,
							PaymentTypeID: "M",
							TaxCode: formData.taxCode
						});
					}

					if (data.saveType == "edit") {
						toastr["success"]("Cập nhật thành công!");
						var indx = payers.findIndex(x => x.TaxCode == formData.taxCode && x.PaymentTypeID == 'M');
						payers[indx]["CusName"] = formData.cusName;
						payers[indx]["Address"] = formData.address;

						var indexes = dtTblPayer.rows().eq(0).filter(function(rowIdx) {
							return dtTblPayer.cell(rowIdx, 2).data() === formData.taxCode &&
								dtTblPayer.cell(rowIdx, 5).data() === 'Thu ngay';
						});

						if (indexes.toArray().length > 0) {
							var firstIdx = indexes.toArray()[0];

							dtTblPayer.rows('.m-row-selected').nodes().to$().removeClass("m-row-selected");
							dtTblPayer.rows(firstIdx).nodes().to$().addClass("m-row-selected");

							dtTblPayer.cell(firstIdx, 3).data(formData.cusName);
							dtTblPayer.cell(firstIdx, 4).data(formData.address);
							dtTblPayer.search(formData.taxCode);
							dtTblPayer.draw(false);
						}
					}

				},
				error: function(xhr, status, error) {
					console.log(xhr);

					$(".add-payer-container").unblock();
					$('.toast').remove();
					toastr['error']("Có lỗi xảy ra khi lưu dữ liệu! Vui lòng liên hệ KTV! ");
				}
			});
		}
	});

	function search_ship() {
		$("#search-ship").waitingLoad();
		var formdata = {
			'action': 'view',
			'act': 'searh_ship',
			'arrStatus': $('input[name="shipArrStatus"]:checked').val(),
			'shipname': $('#search-ship-name').val()
		};
		$.ajax({
			url: "/Order/ordReceive/get-ship",
			dataType: 'json',
			data: formdata,
			type: 'POST',
			success: function(data) {
				var rows = [];
				if (data.vsls.length > 0) {
					for (i = 0; i < data.vsls.length; i++) {
						rows.push([
							data.vsls[i].VesselID,
							(i + 1),
							data.vsls[i].VesselName,
							data.vsls[i].InboundVoyage,
							data.vsls[i].OutboundVoyage,
							getDateTime(data.vsls[i].ETB),
							data.vsls[i].VoyageKey,
							getDateTime(data.vsls[i].ATB),
							data.vsls[i].InLane || ''
						]);
					}
				}
				$('#search-ship').dataTable().fnClearTable();
				if (rows.length > 0) {
					$('#search-ship').dataTable().fnAddData(rows);
				}
			},
			error: function(err) {
				console.log(err);
			}
		});
	}

	function getPageIndexOfRowIdx(dtTable, rowIdx) {
		var pageLen = dtTable.page.len();
		var displayLength = dtTable.rows().count() / pageLen;

		return Math.floor(rowIdx / displayLength);
	}
</script>
<script language="javascript" type="text/javascript">
	Array.prototype.max = function() {
		return Math.max.apply(null, this);
	};

	Array.prototype.min = function() {
		return Math.min.apply(null, this);
	};
</script>

<script src="/assets/vendors/moment/min/moment.min.js"></script>
<script src="/assets/vendors/bootstrap-select/dist/js/bootstrap-select.min.js"></script>
<!--format number-->
<script src="/assets/js/jshashtable-2.1.js"></script>
<script src="/assets/js/jquery.numberformatter-1.2.3.min.js"></script>